{"version":3,"file":"socketServer.js","names":["require","path","_","url","urlUtil","text","Feature","Helpers","ensureFeatureName","InvalidConfiguration","DEFAULT_CONTROLLER_PATH","loadEventHandler","appModule","namespace","controllerBasePath","handlerName","isMiddleware","pos","lastIndexOf","controller","substring","action","controllerPath","resolve","ctrl","middlewareHandler","startSocketServer","serviceName","config","ioServer","tryRequire","port","logger","wsPath","options","getService","log","args","logError","error","message","io","standalone","endpointPath","join","route","ensureStartsWith","server","httpServer","on","socket","endpoint","id","handshake","controllersPath","backendPath","middlewares","use","middlewareName","isEmpty","routes","forOwn","info","name","namespaceChannel","of","m","Array","isArray","forEach","eventHandlers","rpcControllerPath","isObj","controllerObj","_eventHandlers","events","each","methodName","eventName","invoke","ctx","data","fn","cb","console","bind","then","result","catch","handler","event","onConnect","listen","module","exports","type","PLUGIN","groupable","load_","app","registerService"],"sources":["../../src/appFeatures/socketServer.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Socket based Rpc Server\n * @module Feature_SocketServer\n * \n * middleware: (packet, next) => {}\n */\n\nconst path = require('path');\nconst { _, url: urlUtil, text } = require('@genx/july');\nconst {\n    Feature,\n    Helpers: { ensureFeatureName },\n} = require(\"@genx/app\");\nconst { InvalidConfiguration } = require('@genx/error');\n\nconst DEFAULT_CONTROLLER_PATH = 'events';\n\nfunction loadEventHandler(appModule, namespace, controllerBasePath, handlerName, isMiddleware = false) {\n    let pos = handlerName.lastIndexOf('.');\n    if (pos < 0) {\n        if (isMiddleware) {\n            throw new InvalidConfiguration(\n                `Invalid middleware reference: ${handlerName}`,\n                appModule,\n                namespace ? `socketServer.routes[\"${namespace}\"].middlewares` : 'socketServer.middlewares'\n            );\n        } else {\n            throw new InvalidConfiguration(\n                `Invalid event handler reference: ${handlerName}`,\n                appModule,\n                `socketServer.routes[\"${namespace}\"].events`\n            );\n        }\n    }\n\n    let controller = handlerName.substring(0, pos);\n    let action = handlerName.substring(pos + 1);\n\n    let controllerPath = path.resolve(controllerBasePath, controller + '.js');\n    let ctrl = require(controllerPath);\n    \n    let middlewareHandler = ctrl[action];\n    if (typeof middlewareHandler !== 'function') {\n        if (isMiddleware) {\n            throw new InvalidConfiguration(\n                `Middleware function not found: ${handlerName}`,\n                appModule,\n                namespace ? `socketServer.routes[\"${namespace}\"].middlewares` : 'socketServer.middlewares'\n            );\n        } else {\n            throw new InvalidConfiguration(\n                `Event handler function not found: ${handlerName}`,\n                appModule,\n                `socketServer.routes[\"${namespace}\"].events`\n            );\n        }\n    }\n\n    return middlewareHandler;\n}\n\nfunction startSocketServer(appModule, serviceName, config) {\n    const ioServer = appModule.tryRequire('socket.io');\n\n    let { port, logger, path: wsPath, ...options } = config;\n\n    if (logger && typeof logger === 'string') {\n        logger = appModule.getService('logger.' + logger);\n    }\n\n    function log(...args) {\n        logger && logger.log(...args);\n    }\n\n    function logError(error) {\n        logger && logger.log('error', error.message || error);\n    }\n\n    let io, standalone = false;\n\n    let endpointPath = wsPath ? urlUtil.join(appModule.route, wsPath) : appModule.route;\n    endpointPath = text.ensureStartsWith(endpointPath, '/');\n\n    options.path = endpointPath;\n\n    if (port) {\n        io = ioServer(options);\n        standalone = true;\n        appModule.log('verbose', `A standalone socket server is listening at [port=${port}, path=${endpointPath}].`);        \n    } else {\n        io = ioServer(appModule.server.httpServer, options);\n        port = appModule.server.port;\n        appModule.log('verbose', `A socket server is listening at [path=${endpointPath}].`);        \n    }\n\n    io.on('connection', socket => {\n        log('info', 'client connect', {\n            endpoint: endpointPath,\n            port,\n            id: socket.id,\n            ...socket.handshake\n        });\n\n        socket.on('disconnect', () => {\n            log('info', 'client disconnect', { \n                endpoint: endpointPath,\n                port,\n                id: socket.id\n            });\n        });\n    });\n\n    let controllersPath = path.resolve(appModule.backendPath, config.controllersPath || DEFAULT_CONTROLLER_PATH);\n\n    if (config.middlewares) {\n        io.use(loadEventHandler(appModule, null, controllersPath, middlewareName, true));\n    }\n\n    if (_.isEmpty(config.routes)) {\n        throw new InvalidConfiguration(\n            'Missing routes config.',\n            appModule,\n            'socketServer.routes'\n        );\n    }        \n\n    _.forOwn(config.routes, (info, name) => {\n        name = text.ensureStartsWith(name, '/');\n\n        let namespaceChannel = io.of(name);\n\n        if (info.middlewares) {\n            let m = Array.isArray(info.middlewares) ? info.middlewares : [ info.middlewares ];\n            m.forEach(middlewareName => {\n                namespaceChannel.use(loadEventHandler(appModule, name, controllersPath, middlewareName, true));\n            });\n        }\n\n        let eventHandlers;\n\n        if (!info.controller) {               \n            throw new InvalidConfiguration(\n                'Missing controller.',\n                appModule,\n                `socketServer.routes[${name}]`\n            );\n        }\n            \n        let rpcControllerPath = path.resolve(controllersPath, info.controller + '.js');\n        let isObj = false;\n        const controllerObj = require(rpcControllerPath);\n        if (typeof controllerObj === 'function') {\n            eventHandlers = new controllerObj(appModule);\n            isObj = true;\n        } else {\n            eventHandlers = controllerObj;\n        }\n\n        appModule.log('verbose', `[${serviceName}] controller \"${info.controller}\" is attached for namespace \"${name}\".`);    \n\n        const _eventHandlers = {};\n        \n        info.events && _.each(info.events, (methodName, eventName) => {\n            if (typeof eventHandlers[methodName] === 'function') {\n                _eventHandlers[eventName] = eventHandlers[methodName];\n            }\n        });\n\n        function invoke(ctx, data, fn, cb) {\n            console.log('invoke ..........');\n\n            if (isObj) {\n                fn = fn.bind(eventHandlers);\n            }\n        \n            fn(ctx, data).then(result => result != null && cb && cb(result)).catch(logError);\n        }\n        \n        namespaceChannel.on('connect', function (socket) {\n            let ctx = { appModule, socket };  \n\n            //Register event handlers\n            _.forOwn(_eventHandlers, (handler, event) => {\n                socket.on(event, (data, cb) => invoke(ctx, data, handler, cb));\n            });                \n\n            if (eventHandlers.onConnect) {                \n                invoke(ctx, null, eventHandlers.onConnect);\n            }      \n            \n            log('verbose', 'namespace connect', { \n                endpoint: endpointPath,\n                port,\n                id: socket.id, \n                namespace: name \n            });       \n        });\n    });\n\n    if (standalone) {\n        io.listen(config.port);\n    }\n\n    return io;\n}\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at plugin stage\n     * @member {string}\n     */\n    type: Feature.PLUGIN,\n\n    groupable: true,\n\n    /**\n     * The socket server options.\n     * @typedef {Object} ServerOptions\n     * @property {string} [path=/socket.io] - name of the path to capture\n     * @property {boolean} [serveClient=true] - whether to serve the client files\n     * @property {Adapter} adapter - the adapter to use. Defaults to an instance of the Adapter that ships with socket.io which is memory based. See socket.io-adapter\n     * @property {string} origins - the allowed origins\n     * @property {Parser} parser - the parser to use. Defaults to an instance of the Parser that ships with socket.io. See socket.io-parser\n     * @see {@link https://socket.io/docs/server-api/} for more options\n     */\n\n    /**\n     * Load the rpc Server\n     * @param {AppModule} app - The app module object\n     * @param {ServerOptions} options - Rpc server config\n     */\n    load_: (app, options, name) => {   \n        ensureFeatureName(name);\n\n        let io = startSocketServer(app, name, options);\n\n        //default socket server\n        app.registerService(name, io);\n    }\n};"],"mappings":"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"}