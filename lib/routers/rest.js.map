{"version":3,"file":"rest.js","names":["require","path","_","text","glob","Router","Literal","hasMethod","module","exports","app","baseRoute","options","resourcePath","resolve","backendPath","resourcesPath","RESOURCES_PATH","router","prefix","dropIfEndsWith","useMiddleware","getMiddlewareFactory","errorOptions","middlewares","useMiddlewares","join","files","sync","nodir","each","file","relPath","relative","batchUrl","ensureStartsWith","substring","length","split","sep","map","p","kebabCase","singleUrl","controller","addRoute","ctx","query","create","detail","update","remove","addRouter"],"sources":["../../src/routers/rest.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\nconst { _, text } = require(\"@genx/july\");\nconst { glob } = require(\"@genx/sys\");\nconst Router = require(\"@koa/router\");\nconst Literal = require(\"../enum/Literal\");\nconst { hasMethod } = require(\"../utils/Helpers\");\n\n/**\n * RESTful router.\n * @module Router_Rest\n */\n\n/**\n * Create a RESTful router.\n * @param {*} app\n * @param {string} baseRoute\n * @param {objects} options\n * @property {string} [options.resourcesPath]\n * @property {object|array} [options.middlewares]\n * @example\n *  '<base path>': {\n *      rest: {\n *          resourcesPath:\n *          middlewares:\n *      }\n *  }\n *\n *  route                          http method    function of ctrl\n *  /:resource                     get            query\n *  /:resource                     post           create\n *  /:resource/:id                 get            detail\n *  /:resource/:id                 put            update\n *  /:resource/:id                 delete         remove\n */\nmodule.exports = (app, baseRoute, options) => {\n    let resourcePath = path.resolve(app.backendPath, options.resourcesPath || Literal.RESOURCES_PATH);\n\n    let router = baseRoute === \"/\" ? new Router() : new Router({ prefix: text.dropIfEndsWith(baseRoute, \"/\") });\n\n    app.useMiddleware(router, app.getMiddlewareFactory(\"jsonError\")(options.errorOptions, app), \"jsonError\");\n\n    if (options.middlewares) {\n        app.useMiddlewares(router, options.middlewares);\n    }\n\n    let resourcesPath = path.join(resourcePath, \"**\", \"*.js\");\n    let files = glob.sync(resourcesPath, { nodir: true });\n\n    _.each(files, (file) => {\n        let relPath = path.relative(resourcePath, file);\n        let batchUrl = text.ensureStartsWith(\n            relPath\n                .substring(0, relPath.length - 3)\n                .split(path.sep)\n                .map((p) => _.kebabCase(p))\n                .join(\"/\"),\n            \"/\"\n        );\n        let singleUrl = batchUrl + \"/:id\";\n\n        let controller = require(file);\n\n        if (typeof controller === \"function\") {\n            controller = new controller(app);\n        }\n\n        if (hasMethod(controller, \"query\")) {\n            app.addRoute(router, \"get\", batchUrl, (ctx) => controller.query(ctx));\n        }\n\n        if (hasMethod(controller, \"create\")) {\n            app.addRoute(router, \"post\", batchUrl, (ctx) => controller.create(ctx));\n        }\n\n        if (hasMethod(controller, \"detail\")) {\n            app.addRoute(router, \"get\", singleUrl, (ctx) => controller.detail(ctx));\n        }\n\n        if (hasMethod(controller, \"update\")) {\n            app.addRoute(router, \"put\", singleUrl, (ctx) => controller.update(ctx));\n        }\n\n        if (hasMethod(controller, \"remove\")) {\n            app.addRoute(router, \"del\", singleUrl, (ctx) => controller.remove(ctx));\n        }\n    });\n\n    app.addRouter(router);\n};\n"],"mappings":"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"}