{"version":3,"file":"passportCheck.js","names":["HttpCode","require","module","exports","options","app","ctx","next","isAuthenticated","successReturnToOrRedirect","session","returnTo","originalUrl","url","loginUrl","throw","UNAUTHORIZED","redirect"],"sources":["../../src/middlewares/passportCheck.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Middleware to check user logged in status based on passport\n * @module Middleware_PassportCheck\n */\n\nconst HttpCode = require('http-status-codes');\n\n/**\n * Initialize ensureLoggedIn middleware\n * @param {object} options\n * @property {string} [options.loginUrl] - If given, will redirect to loginUrl if not loggedIn\n * @property {boolean} [options.successReturnToOrRedirect] - If given, will redirect to loginUrl if not loggedIn \n * @param {Routable} app\n */  \nmodule.exports = (options, app) => {\n    return async (ctx, next) => {\n        if (ctx.isAuthenticated()) {\n            return next();\n        }\n\n        if (options.successReturnToOrRedirect && ctx.session) {\n            ctx.session.returnTo = ctx.originalUrl || ctx.url;            \n        }\n\n        if (!options.loginUrl) {\n            ctx.throw(HttpCode.UNAUTHORIZED, 'authentication required');\n        }\n\n        return ctx.redirect(options.loginUrl);\n    }\n};"],"mappings":"AAAA;;;;AAOA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAxB;;AASAC,MAAM,CAACC,OAAP,GAAiB,CAACC,OAAD,EAAUC,GAAV,KAAkB;EAC/B,OAAO,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;IACxB,IAAID,GAAG,CAACE,eAAJ,EAAJ,EAA2B;MACvB,OAAOD,IAAI,EAAX;IACH;;IAED,IAAIH,OAAO,CAACK,yBAAR,IAAqCH,GAAG,CAACI,OAA7C,EAAsD;MAClDJ,GAAG,CAACI,OAAJ,CAAYC,QAAZ,GAAuBL,GAAG,CAACM,WAAJ,IAAmBN,GAAG,CAACO,GAA9C;IACH;;IAED,IAAI,CAACT,OAAO,CAACU,QAAb,EAAuB;MACnBR,GAAG,CAACS,KAAJ,CAAUf,QAAQ,CAACgB,YAAnB,EAAiC,yBAAjC;IACH;;IAED,OAAOV,GAAG,CAACW,QAAJ,CAAab,OAAO,CAACU,QAArB,CAAP;EACH,CAdD;AAeH,CAhBD"}