"use strict";

require("source-map-support/register");

const {
  _,
  ensureLeftSlash,
  trimRightSlash
} = require('rk-utils');

const path = require('path');

const {
  ServiceContainer
} = require('@genx/app');

const ModuleBase = require('./ModuleBase');

const Routable = require('./Routable');

const Literal = require('./enum/Literal');

class WebModule extends ModuleBase(Routable(ServiceContainer)) {
  constructor(server, name, route, appPath, options) {
    super(server, name, appPath, options);
    this.ß = void 0;
    this.route = ensureLeftSlash(trimRightSlash(route));
  }

  requireFromApp(appName, relativePath) {
    return this.server.requireFromApp(appßName, relativePath);
  }

  _getFeatureFallbackPath() {
    let pathArray = super._getFeatureFallbackPath();

    pathArray.splice(2, 0, path.resolve(__dirname, Literal.APP_FEATURES_PATH));
    return pathArray;
  }

}

module.exports = WebModule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9XZWJNb2R1bGUuanMiXSwibmFtZXMiOlsiXyIsImVuc3VyZUxlZnRTbGFzaCIsInRyaW1SaWdodFNsYXNoIiwicmVxdWlyZSIsInBhdGgiLCJTZXJ2aWNlQ29udGFpbmVyIiwiTW9kdWxlQmFzZSIsIlJvdXRhYmxlIiwiTGl0ZXJhbCIsIldlYk1vZHVsZSIsImNvbnN0cnVjdG9yIiwic2VydmVyIiwibmFtZSIsInJvdXRlIiwiYXBwUGF0aCIsIm9wdGlvbnMiLCLDnyIsInJlcXVpcmVGcm9tQXBwIiwiYXBwTmFtZSIsInJlbGF0aXZlUGF0aCIsImFwcMOfTmFtZSIsIl9nZXRGZWF0dXJlRmFsbGJhY2tQYXRoIiwicGF0aEFycmF5Iiwic3BsaWNlIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsIkFQUF9GRUFUVVJFU19QQVRIIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxNQUFNO0FBQUVBLEVBQUFBLENBQUY7QUFBS0MsRUFBQUEsZUFBTDtBQUFzQkMsRUFBQUE7QUFBdEIsSUFBeUNDLE9BQU8sQ0FBQyxVQUFELENBQXREOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTTtBQUFFRSxFQUFBQTtBQUFGLElBQXVCRixPQUFPLENBQUMsV0FBRCxDQUFwQzs7QUFDQSxNQUFNRyxVQUFVLEdBQUdILE9BQU8sQ0FBQyxjQUFELENBQTFCOztBQUNBLE1BQU1JLFFBQVEsR0FBR0osT0FBTyxDQUFDLFlBQUQsQ0FBeEI7O0FBQ0EsTUFBTUssT0FBTyxHQUFHTCxPQUFPLENBQUMsZ0JBQUQsQ0FBdkI7O0FBT0EsTUFBTU0sU0FBTixTQUF3QkgsVUFBVSxDQUFDQyxRQUFRLENBQUNGLGdCQUFELENBQVQsQ0FBbEMsQ0FBK0Q7QUFTM0RLLEVBQUFBLFdBQVcsQ0FBQ0MsTUFBRCxFQUFTQyxJQUFULEVBQWVDLEtBQWYsRUFBc0JDLE9BQXRCLEVBQStCQyxPQUEvQixFQUF3QztBQUMvQyxVQUFNSixNQUFOLEVBQWNDLElBQWQsRUFBb0JFLE9BQXBCLEVBQTZCQyxPQUE3QjtBQUQrQyxTQWFoREMsQ0FiZ0Q7QUFPL0MsU0FBS0gsS0FBTCxHQUFhWixlQUFlLENBQUNDLGNBQWMsQ0FBQ1csS0FBRCxDQUFmLENBQTVCO0FBQ0g7O0FBTURJLEVBQUFBLGNBQWMsQ0FBQ0MsT0FBRCxFQUFVQyxZQUFWLEVBQXdCO0FBQ2xDLFdBQU8sS0FBS1IsTUFBTCxDQUFZTSxjQUFaLENBQTJCRyxRQUEzQixFQUFxQ0QsWUFBckMsQ0FBUDtBQUNIOztBQUVERSxFQUFBQSx1QkFBdUIsR0FBRztBQUN0QixRQUFJQyxTQUFTLEdBQUcsTUFBTUQsdUJBQU4sRUFBaEI7O0FBQ0FDLElBQUFBLFNBQVMsQ0FBQ0MsTUFBVixDQUFpQixDQUFqQixFQUFvQixDQUFwQixFQUF1Qm5CLElBQUksQ0FBQ29CLE9BQUwsQ0FBYUMsU0FBYixFQUF3QmpCLE9BQU8sQ0FBQ2tCLGlCQUFoQyxDQUF2QjtBQUNBLFdBQU9KLFNBQVA7QUFDSDs7QUEvQjBEOztBQWtDL0RLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLFNBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IHsgXywgZW5zdXJlTGVmdFNsYXNoLCB0cmltUmlnaHRTbGFzaCB9ID0gcmVxdWlyZSgncmstdXRpbHMnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCB7IFNlcnZpY2VDb250YWluZXIgfSA9IHJlcXVpcmUoJ0BnZW54L2FwcCcpO1xuY29uc3QgTW9kdWxlQmFzZSA9IHJlcXVpcmUoJy4vTW9kdWxlQmFzZScpO1xuY29uc3QgUm91dGFibGUgPSByZXF1aXJlKCcuL1JvdXRhYmxlJyk7XG5jb25zdCBMaXRlcmFsID0gcmVxdWlyZSgnLi9lbnVtL0xpdGVyYWwnKTtcblxuLyoqXG4gKiBXZWIgYXBwbGljYXRpb24gbW9kdWxlIGNsYXNzLlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBSb3V0YWJsZShMaWJNb2R1bGUpXG4gKi9cbmNsYXNzIFdlYk1vZHVsZSBleHRlbmRzIE1vZHVsZUJhc2UoUm91dGFibGUoU2VydmljZUNvbnRhaW5lcikpIHtcbiAgICAvKiogICAgIFxuICAgICAqIEBwYXJhbSB7V2ViU2VydmVyfSBzZXJ2ZXJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBhcHAgbW9kdWxlLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSByb3V0ZSAtIFRoZSBiYXNlIHJvdXRlIG9mIHRoZSBhcHAgbW9kdWxlLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhcHBQYXRoIC0gVGhlIHBhdGggdG8gbG9hZCB0aGUgYXBwJ3MgbW9kdWxlIGZpbGVzXG4gICAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXSAtIFRoZSBhcHAgbW9kdWxlJ3MgZXh0cmEgb3B0aW9ucyBkZWZpbmVkIGluIGl0cyBwYXJlbnQncyBjb25maWd1cmF0aW9uLiAgICAgICAgICBcbiAgICAgKiBAcHJvcGVydHkge2Jvb2x9IFtvcHRpb25zLmxvZ1dpdGhBcHBOYW1lPWZhbHNlXSAtIEZsYWcgdG8gaW5jbHVkZSBhcHAgbmFtZSBpbiBsb2cgbWVzc2FnZS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzZXJ2ZXIsIG5hbWUsIHJvdXRlLCBhcHBQYXRoLCBvcHRpb25zKSB7ICAgIFxuICAgICAgICBzdXBlcihzZXJ2ZXIsIG5hbWUsIGFwcFBhdGgsIG9wdGlvbnMpO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBNb3VudGluZyByb3V0ZS5cbiAgICAgICAgICogQG1lbWJlciB7c3RyaW5nfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5yb3V0ZSA9IGVuc3VyZUxlZnRTbGFzaCh0cmltUmlnaHRTbGFzaChyb3V0ZSkpOyAgICAgICAgICAgICAgIFxuICAgIH0gIFxuXG4gICAgLyoqXG4gICAgICogUmVxdWlyZSBhIG1vZHVsZSBmcm9tIHRoZSBzb3VyY2UgcGF0aCBvZiBhbiBhcHAgbW9kdWxlXG4gICAgICogQHBhcmFtIHsqfSByZWxhdGl2ZVBhdGggXG4gICAgICovw59cbiAgICByZXF1aXJlRnJvbUFwcChhcHBOYW1lLCByZWxhdGl2ZVBhdGgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VydmVyLnJlcXVpcmVGcm9tQXBwKGFwcMOfTmFtZSwgcmVsYXRpdmVQYXRoKTtcbiAgICB9XG5cbiAgICBfZ2V0RmVhdHVyZUZhbGxiYWNrUGF0aCgpIHtcbiAgICAgICAgbGV0IHBhdGhBcnJheSA9IHN1cGVyLl9nZXRGZWF0dXJlRmFsbGJhY2tQYXRoKCk7XG4gICAgICAgIHBhdGhBcnJheS5zcGxpY2UoMiwgMCwgcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgTGl0ZXJhbC5BUFBfRkVBVFVSRVNfUEFUSCkpO1xuICAgICAgICByZXR1cm4gcGF0aEFycmF5O1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBXZWJNb2R1bGU7Il19