"use strict";

require("source-map-support/register");

const {
  _,
  eachAsync_
} = require('@genx/july');

const {
  Feature
} = require('..').Enums;

const {
  InvalidConfiguration
} = require('@genx/error');

module.exports = {
  type: Feature.PLUGIN,
  load_: async function (app, config) {
    const Acl = app.tryRequire('acl');
    let backend = config.backend || 'memory';
    let backendType, backendStore;

    if (backend.indexOf('.') > 0) {
      backendType = '';
    }

    switch (backend) {
      case 'memory':
        backendStore = new Acl.memoryBackend();
        break;

      case 'mongodb':
        if (!config.dataSource) {
          throw new InvalidConfiguration('"dataSource" is required for mongodb backend of acl.', app, 'acl.dataSource');
        }

        let mongodb = app.getService(config.dataSource);

        if (!mongodb) {
          throw new InvalidConfiguration(`Data source "${config.dataSource}" not found.`, app, 'acl.dataSource');
        }

        backendStore = new Acl.mongodbBackend((await mongodb.connect_()), config.prefix);
        break;

      case 'redis':
        throw new Error('to be implemented');
        break;

      default:
        throw new InvalidConfiguration('Unsupported acl backend: ' + backend, app, 'acl.backend');
    }

    app.acl = new Acl(backendStore);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mZWF0dXJlcy9hY2wuanMiXSwibmFtZXMiOlsiXyIsImVhY2hBc3luY18iLCJyZXF1aXJlIiwiRmVhdHVyZSIsIkVudW1zIiwiSW52YWxpZENvbmZpZ3VyYXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIiwidHlwZSIsIlBMVUdJTiIsImxvYWRfIiwiYXBwIiwiY29uZmlnIiwiQWNsIiwidHJ5UmVxdWlyZSIsImJhY2tlbmQiLCJiYWNrZW5kVHlwZSIsImJhY2tlbmRTdG9yZSIsImluZGV4T2YiLCJtZW1vcnlCYWNrZW5kIiwiZGF0YVNvdXJjZSIsIm1vbmdvZGIiLCJnZXRTZXJ2aWNlIiwibW9uZ29kYkJhY2tlbmQiLCJjb25uZWN0XyIsInByZWZpeCIsIkVycm9yIiwiYWNsIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQU9BLE1BQU07QUFBRUEsRUFBQUEsQ0FBRjtBQUFLQyxFQUFBQTtBQUFMLElBQW9CQyxPQUFPLENBQUMsWUFBRCxDQUFqQzs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBY0QsT0FBTyxDQUFDLElBQUQsQ0FBUCxDQUFjRSxLQUFsQzs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBMkJILE9BQU8sQ0FBQyxhQUFELENBQXhDOztBQUVBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFNYkMsRUFBQUEsSUFBSSxFQUFFTCxPQUFPLENBQUNNLE1BTkQ7QUF1QmJDLEVBQUFBLEtBQUssRUFBRSxnQkFBZ0JDLEdBQWhCLEVBQXFCQyxNQUFyQixFQUE2QjtBQUNoQyxVQUFNQyxHQUFHLEdBQUdGLEdBQUcsQ0FBQ0csVUFBSixDQUFlLEtBQWYsQ0FBWjtBQUNBLFFBQUlDLE9BQU8sR0FBR0gsTUFBTSxDQUFDRyxPQUFQLElBQWtCLFFBQWhDO0FBQ0EsUUFBSUMsV0FBSixFQUFpQkMsWUFBakI7O0FBRUEsUUFBSUYsT0FBTyxDQUFDRyxPQUFSLENBQWdCLEdBQWhCLElBQXVCLENBQTNCLEVBQThCO0FBQzFCRixNQUFBQSxXQUFXLEdBQUcsRUFBZDtBQUNIOztBQUVELFlBQVFELE9BQVI7QUFDSSxXQUFLLFFBQUw7QUFDQUUsUUFBQUEsWUFBWSxHQUFHLElBQUlKLEdBQUcsQ0FBQ00sYUFBUixFQUFmO0FBQ0E7O0FBRUEsV0FBSyxTQUFMO0FBQ0EsWUFBSSxDQUFDUCxNQUFNLENBQUNRLFVBQVosRUFBd0I7QUFDcEIsZ0JBQU0sSUFBSWYsb0JBQUosQ0FBeUIsc0RBQXpCLEVBQWlGTSxHQUFqRixFQUFzRixnQkFBdEYsQ0FBTjtBQUNIOztBQUVELFlBQUlVLE9BQU8sR0FBR1YsR0FBRyxDQUFDVyxVQUFKLENBQWVWLE1BQU0sQ0FBQ1EsVUFBdEIsQ0FBZDs7QUFDQSxZQUFJLENBQUNDLE9BQUwsRUFBYztBQUNWLGdCQUFNLElBQUloQixvQkFBSixDQUEwQixnQkFBZU8sTUFBTSxDQUFDUSxVQUFXLGNBQTNELEVBQTBFVCxHQUExRSxFQUErRSxnQkFBL0UsQ0FBTjtBQUNIOztBQUVETSxRQUFBQSxZQUFZLEdBQUcsSUFBSUosR0FBRyxDQUFDVSxjQUFSLEVBQXVCLE1BQU1GLE9BQU8sQ0FBQ0csUUFBUixFQUE3QixHQUFpRFosTUFBTSxDQUFDYSxNQUF4RCxDQUFmO0FBQ0E7O0FBRUEsV0FBSyxPQUFMO0FBQ0EsY0FBTSxJQUFJQyxLQUFKLENBQVUsbUJBQVYsQ0FBTjtBQUNBOztBQUVBO0FBQ0EsY0FBTSxJQUFJckIsb0JBQUosQ0FBeUIsOEJBQThCVSxPQUF2RCxFQUFnRUosR0FBaEUsRUFBcUUsYUFBckUsQ0FBTjtBQXZCSjs7QUEwQkFBLElBQUFBLEdBQUcsQ0FBQ2dCLEdBQUosR0FBVSxJQUFJZCxHQUFKLENBQVFJLFlBQVIsQ0FBVjtBQUNIO0FBM0RZLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogRW5hYmxlIGFjbCBmZWF0dXJlXG4gKiBAbW9kdWxlIEZlYXR1cmVfQWNsXG4gKi9cblxuY29uc3QgeyBfLCBlYWNoQXN5bmNfIH0gPSByZXF1aXJlKCdAZ2VueC9qdWx5Jyk7XG5jb25zdCB7IEZlYXR1cmUgfSA9IHJlcXVpcmUoJy4uJykuRW51bXM7XG5jb25zdCB7IEludmFsaWRDb25maWd1cmF0aW9uIH0gPSByZXF1aXJlKCdAZ2VueC9lcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblxuICAgIC8qKlxuICAgICAqIFRoaXMgZmVhdHVyZSBpcyBsb2FkZWQgYXQgc2VydmljZSBzdGFnZVxuICAgICAqIEBtZW1iZXIge3N0cmluZ31cbiAgICAgKi9cbiAgICB0eXBlOiBGZWF0dXJlLlBMVUdJTixcblxuICAgIC8qKlxuICAgICAqIExvYWQgdGhlIGZlYXR1cmVcbiAgICAgKiBAcGFyYW0ge1JvdXRhYmxlfSBhcHAgLSBUaGUgYXBwIG1vZHVsZSBvYmplY3RcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIC0gQWNsIHNldHRpbmdzXG4gICAgICogQHByb3BlcnR5IHtzdHJpbmd9IGNvbmZpZy5iYWNrZW5kIC0gQmFja2VuZCBzdG9yZSB0eXBlIG9mIGFjbCwgbWVtb3J5LCBtb25nb2RiLCByZWRpc1xuICAgICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBbY29uZmlnLmRhdGFTb3VyY2VdIC0gU3RvcmUgdHlwZSBvZiBhY2xcbiAgICAgKiBAcHJvcGVydHkge29iamVjdH0gW2NvbmZpZy5wcmVmaXhdIC0gU3RvcmUgb3B0aW9uc1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlLjwqPn1cbiAgICAgKiBcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIFxuICAgICAqIGFjbDoge1xuICAgICAqICAgYmFja2VuZDogJ21vbmdvZGIuZGF0YVNvdXJjZU5hbWUnXG4gICAgICogfVxuICAgICAqL1xuICAgIGxvYWRfOiBhc3luYyBmdW5jdGlvbiAoYXBwLCBjb25maWcpIHtcbiAgICAgICAgY29uc3QgQWNsID0gYXBwLnRyeVJlcXVpcmUoJ2FjbCcpO1xuICAgICAgICBsZXQgYmFja2VuZCA9IGNvbmZpZy5iYWNrZW5kIHx8ICdtZW1vcnknO1xuICAgICAgICBsZXQgYmFja2VuZFR5cGUsIGJhY2tlbmRTdG9yZTtcblxuICAgICAgICBpZiAoYmFja2VuZC5pbmRleE9mKCcuJykgPiAwKSB7XG4gICAgICAgICAgICBiYWNrZW5kVHlwZSA9ICcnO1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpdGNoIChiYWNrZW5kKSB7XG4gICAgICAgICAgICBjYXNlICdtZW1vcnknOlxuICAgICAgICAgICAgYmFja2VuZFN0b3JlID0gbmV3IEFjbC5tZW1vcnlCYWNrZW5kKCk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAnbW9uZ29kYic6XG4gICAgICAgICAgICBpZiAoIWNvbmZpZy5kYXRhU291cmNlKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDb25maWd1cmF0aW9uKCdcImRhdGFTb3VyY2VcIiBpcyByZXF1aXJlZCBmb3IgbW9uZ29kYiBiYWNrZW5kIG9mIGFjbC4nLCBhcHAsICdhY2wuZGF0YVNvdXJjZScpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgbW9uZ29kYiA9IGFwcC5nZXRTZXJ2aWNlKGNvbmZpZy5kYXRhU291cmNlKTtcbiAgICAgICAgICAgIGlmICghbW9uZ29kYikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ29uZmlndXJhdGlvbihgRGF0YSBzb3VyY2UgXCIke2NvbmZpZy5kYXRhU291cmNlfVwiIG5vdCBmb3VuZC5gLCBhcHAsICdhY2wuZGF0YVNvdXJjZScpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBiYWNrZW5kU3RvcmUgPSBuZXcgQWNsLm1vbmdvZGJCYWNrZW5kKGF3YWl0IG1vbmdvZGIuY29ubmVjdF8oKSwgY29uZmlnLnByZWZpeCk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAncmVkaXMnOlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd0byBiZSBpbXBsZW1lbnRlZCcpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZENvbmZpZ3VyYXRpb24oJ1Vuc3VwcG9ydGVkIGFjbCBiYWNrZW5kOiAnICsgYmFja2VuZCwgYXBwLCAnYWNsLmJhY2tlbmQnKTtcbiAgICAgICAgfSAgICAgICAgXG4gICAgXG4gICAgICAgIGFwcC5hY2wgPSBuZXcgQWNsKGJhY2tlbmRTdG9yZSk7ICAgICAgIFxuICAgIH1cbn07Il19