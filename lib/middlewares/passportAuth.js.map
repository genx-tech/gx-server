{"version":3,"file":"passportAuth.js","names":["require","InvalidConfiguration","createMiddleware","opt","app","strategy","passportService","getService","authenticate","options","module","exports"],"sources":["../../src/middlewares/passportAuth.js"],"sourcesContent":["\"use strict\";\n\nconst { InvalidConfiguration } = require('@genx/error');\n\n/**\n * Passport initialization middleware, required to initialize Passport service.\n * @module Middleware_PassportAuth\n */\n\n/**\n * Create a passport authentication middleware.\n * @param {object} opt - Passport options\n * @property {string} opt.strategy - Passport strategy\n * @property {object} [opt.options] - Passport strategy options\n * @param {Routable} app\n * @returns {KoaActionFunction}\n */\nlet createMiddleware = (opt, app) => {\n    if (!opt || !opt.strategy) {\n        throw new InvalidConfiguration(\n            'Missing strategy name.', \n            app, \n            'middlewares.passportAuth.strategy'\n        );\n    }    \n    \n    let passportService = app.getService('passport');\n\n    if (!passportService) {\n        throw new InvalidConfiguration(\n            'Passport feature is not enabled.',\n            app,\n            'passport'\n        );\n    }\n\n    return passportService.authenticate(opt.strategy, opt.options);\n};\n\nmodule.exports = createMiddleware;"],"mappings":"AAAA,YAAY;;AAACA,OAAA;AAEb,MAAM;EAAEC;AAAqB,CAAC,GAAGD,OAAO,CAAC,aAAa,CAAC;AAevD,IAAIE,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;EACjC,IAAI,CAACD,GAAG,IAAI,CAACA,GAAG,CAACE,QAAQ,EAAE;IACvB,MAAM,IAAIJ,oBAAoB,CAC1B,wBAAwB,EACxBG,GAAG,EACH,mCACJ,CAAC;EACL;EAEA,IAAIE,eAAe,GAAGF,GAAG,CAACG,UAAU,CAAC,UAAU,CAAC;EAEhD,IAAI,CAACD,eAAe,EAAE;IAClB,MAAM,IAAIL,oBAAoB,CAC1B,kCAAkC,EAClCG,GAAG,EACH,UACJ,CAAC;EACL;EAEA,OAAOE,eAAe,CAACE,YAAY,CAACL,GAAG,CAACE,QAAQ,EAAEF,GAAG,CAACM,OAAO,CAAC;AAClE,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGT,gBAAgB"}