"use strict";

require("source-map-support/register");

const Util = require('rk-utils');

const _ = Util._;

const {
  InvalidConfiguration
} = require('@genx/error');

const Literal = require('../enum/Literal');

const path = require('path');

module.exports = (controllerAction, app) => {
  if (typeof controllerAction !== 'string') {
    throw new InvalidConfiguration('Invalid action syntax.', app);
  }

  let pos = controllerAction.lastIndexOf('.');

  if (pos < 0) {
    throw new InvalidConfiguration(`Unrecognized controller & action syntax: ${controllerAction}.`, app);
  }

  let controller = controllerAction.substr(0, pos);
  let action = controllerAction.substr(pos + 1);
  let controllerBasePath = path.join(app.backendPath, Literal.CONTROLLERS_PATH);
  let controllerPath = path.resolve(controllerBasePath, controller + '.js');

  let ctrl = require(controllerPath);

  let actioner = ctrl[action];

  if (Array.isArray(actioner)) {
    let actionFunction = actioner.concat().pop();

    if (typeof actionFunction !== 'function') {
      throw new InvalidConfiguration(`${controllerAction} does not contain a valid action in returned middleware chain.`, app);
    }

    return actioner.concat(actionFunction);
  }

  if (typeof actioner !== 'function') {
    throw new InvalidConfiguration(`${controllerAction} is not a valid action.`, app);
  }

  return actioner;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlcy9hY3Rpb24uanMiXSwibmFtZXMiOlsiVXRpbCIsInJlcXVpcmUiLCJfIiwiSW52YWxpZENvbmZpZ3VyYXRpb24iLCJMaXRlcmFsIiwicGF0aCIsIm1vZHVsZSIsImV4cG9ydHMiLCJjb250cm9sbGVyQWN0aW9uIiwiYXBwIiwicG9zIiwibGFzdEluZGV4T2YiLCJjb250cm9sbGVyIiwic3Vic3RyIiwiYWN0aW9uIiwiY29udHJvbGxlckJhc2VQYXRoIiwiam9pbiIsImJhY2tlbmRQYXRoIiwiQ09OVFJPTExFUlNfUEFUSCIsImNvbnRyb2xsZXJQYXRoIiwicmVzb2x2ZSIsImN0cmwiLCJhY3Rpb25lciIsIkFycmF5IiwiaXNBcnJheSIsImFjdGlvbkZ1bmN0aW9uIiwiY29uY2F0IiwicG9wIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQU9BLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsQ0FBQyxHQUFHRixJQUFJLENBQUNFLENBQWY7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQTJCRixPQUFPLENBQUMsYUFBRCxDQUF4Qzs7QUFDQSxNQUFNRyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxpQkFBRCxDQUF2Qjs7QUFFQSxNQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQU9BSyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsQ0FBQ0MsZ0JBQUQsRUFBbUJDLEdBQW5CLEtBQTJCO0FBQ3hDLE1BQUksT0FBT0QsZ0JBQVAsS0FBNEIsUUFBaEMsRUFBMEM7QUFDdEMsVUFBTSxJQUFJTCxvQkFBSixDQUF5Qix3QkFBekIsRUFBbURNLEdBQW5ELENBQU47QUFDSDs7QUFFRCxNQUFJQyxHQUFHLEdBQUdGLGdCQUFnQixDQUFDRyxXQUFqQixDQUE2QixHQUE3QixDQUFWOztBQUNBLE1BQUlELEdBQUcsR0FBRyxDQUFWLEVBQWE7QUFDVCxVQUFNLElBQUlQLG9CQUFKLENBQTBCLDRDQUEyQ0ssZ0JBQWlCLEdBQXRGLEVBQTBGQyxHQUExRixDQUFOO0FBQ0g7O0FBRUQsTUFBSUcsVUFBVSxHQUFHSixnQkFBZ0IsQ0FBQ0ssTUFBakIsQ0FBd0IsQ0FBeEIsRUFBMkJILEdBQTNCLENBQWpCO0FBQ0EsTUFBSUksTUFBTSxHQUFHTixnQkFBZ0IsQ0FBQ0ssTUFBakIsQ0FBd0JILEdBQUcsR0FBRyxDQUE5QixDQUFiO0FBQ0EsTUFBSUssa0JBQWtCLEdBQUdWLElBQUksQ0FBQ1csSUFBTCxDQUFVUCxHQUFHLENBQUNRLFdBQWQsRUFBMkJiLE9BQU8sQ0FBQ2MsZ0JBQW5DLENBQXpCO0FBRUEsTUFBSUMsY0FBYyxHQUFHZCxJQUFJLENBQUNlLE9BQUwsQ0FBYUwsa0JBQWIsRUFBaUNILFVBQVUsR0FBRyxLQUE5QyxDQUFyQjs7QUFDQSxNQUFJUyxJQUFJLEdBQUdwQixPQUFPLENBQUNrQixjQUFELENBQWxCOztBQUVBLE1BQUlHLFFBQVEsR0FBR0QsSUFBSSxDQUFDUCxNQUFELENBQW5COztBQUVBLE1BQUlTLEtBQUssQ0FBQ0MsT0FBTixDQUFjRixRQUFkLENBQUosRUFBNkI7QUFDekIsUUFBSUcsY0FBYyxHQUFHSCxRQUFRLENBQUNJLE1BQVQsR0FBa0JDLEdBQWxCLEVBQXJCOztBQUNBLFFBQUksT0FBT0YsY0FBUCxLQUEwQixVQUE5QixFQUEwQztBQUN0QyxZQUFNLElBQUl0QixvQkFBSixDQUEwQixHQUFFSyxnQkFBaUIsZ0VBQTdDLEVBQThHQyxHQUE5RyxDQUFOO0FBQ0g7O0FBRUQsV0FBT2EsUUFBUSxDQUFDSSxNQUFULENBQWdCRCxjQUFoQixDQUFQO0FBQ0g7O0FBRUQsTUFBSSxPQUFPSCxRQUFQLEtBQW9CLFVBQXhCLEVBQW9DO0FBQ2hDLFVBQU0sSUFBSW5CLG9CQUFKLENBQTBCLEdBQUVLLGdCQUFpQix5QkFBN0MsRUFBdUVDLEdBQXZFLENBQU47QUFDSDs7QUFFRCxTQUFPYSxRQUFQO0FBQ0gsQ0FqQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBSZXNwb25zZSBhY3Rpb24gYXMgbWlkZGxld2FyZVxuICogQG1vZHVsZSBNaWRkbGV3YXJlX0FjdGlvblxuICovXG5cbmNvbnN0IFV0aWwgPSByZXF1aXJlKCdyay11dGlscycpO1xuY29uc3QgXyA9IFV0aWwuXztcbmNvbnN0IHsgSW52YWxpZENvbmZpZ3VyYXRpb24gfSA9IHJlcXVpcmUoJ0BnZW54L2Vycm9yJyk7XG5jb25zdCBMaXRlcmFsID0gcmVxdWlyZSgnLi4vZW51bS9MaXRlcmFsJyk7XG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbi8qKlxuICogQWN0aW9uIG1pZGRsZXdhcmUgY3JlYXRvclxuICogQHBhcmFtIHtzdHJpbmd9IGNvbnRyb2xsZXJBY3Rpb24gXG4gKiBAcGFyYW0ge1JvdXRhYmxlfSBhcHAgXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gKGNvbnRyb2xsZXJBY3Rpb24sIGFwcCkgPT4ge1xuICAgIGlmICh0eXBlb2YgY29udHJvbGxlckFjdGlvbiAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDb25maWd1cmF0aW9uKCdJbnZhbGlkIGFjdGlvbiBzeW50YXguJywgYXBwKTtcbiAgICB9XG5cbiAgICBsZXQgcG9zID0gY29udHJvbGxlckFjdGlvbi5sYXN0SW5kZXhPZignLicpO1xuICAgIGlmIChwb3MgPCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ29uZmlndXJhdGlvbihgVW5yZWNvZ25pemVkIGNvbnRyb2xsZXIgJiBhY3Rpb24gc3ludGF4OiAke2NvbnRyb2xsZXJBY3Rpb259LmAsIGFwcCk7XG4gICAgfVxuXG4gICAgbGV0IGNvbnRyb2xsZXIgPSBjb250cm9sbGVyQWN0aW9uLnN1YnN0cigwLCBwb3MpO1xuICAgIGxldCBhY3Rpb24gPSBjb250cm9sbGVyQWN0aW9uLnN1YnN0cihwb3MgKyAxKTtcbiAgICBsZXQgY29udHJvbGxlckJhc2VQYXRoID0gcGF0aC5qb2luKGFwcC5iYWNrZW5kUGF0aCwgTGl0ZXJhbC5DT05UUk9MTEVSU19QQVRIKTtcblxuICAgIGxldCBjb250cm9sbGVyUGF0aCA9IHBhdGgucmVzb2x2ZShjb250cm9sbGVyQmFzZVBhdGgsIGNvbnRyb2xsZXIgKyAnLmpzJyk7XG4gICAgbGV0IGN0cmwgPSByZXF1aXJlKGNvbnRyb2xsZXJQYXRoKTsgICAgXG5cbiAgICBsZXQgYWN0aW9uZXIgPSBjdHJsW2FjdGlvbl07ICAgXG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShhY3Rpb25lcikpIHtcbiAgICAgICAgbGV0IGFjdGlvbkZ1bmN0aW9uID0gYWN0aW9uZXIuY29uY2F0KCkucG9wKCk7XG4gICAgICAgIGlmICh0eXBlb2YgYWN0aW9uRnVuY3Rpb24gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ29uZmlndXJhdGlvbihgJHtjb250cm9sbGVyQWN0aW9ufSBkb2VzIG5vdCBjb250YWluIGEgdmFsaWQgYWN0aW9uIGluIHJldHVybmVkIG1pZGRsZXdhcmUgY2hhaW4uYCwgYXBwKTtcbiAgICAgICAgfSAgICBcblxuICAgICAgICByZXR1cm4gYWN0aW9uZXIuY29uY2F0KGFjdGlvbkZ1bmN0aW9uKTtcbiAgICB9IFxuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb25lciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZENvbmZpZ3VyYXRpb24oYCR7Y29udHJvbGxlckFjdGlvbn0gaXMgbm90IGEgdmFsaWQgYWN0aW9uLmAsIGFwcCk7XG4gICAgfSAgICBcblxuICAgIHJldHVybiBhY3Rpb25lcjtcbn07Il19