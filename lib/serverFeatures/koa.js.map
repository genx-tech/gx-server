{"version":3,"sources":["../../src/serverFeatures/koa.js"],"names":["_","require","validator","InvalidConfiguration","Feature","module","exports","type","SERVICE","load_","server","options","koa","router","env","proxy","trustProxy","toBoolean","subdomainOffset","appModule","keys","isArray","on","err","ctx","extra","pick","request","app","name","status","stack","log","message","logError","httpServer","createServer","callback","port","httpPort","listen","address","host","family","emit"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst { _ } = require('@genx/july');\nconst validator = require('validator');\nconst { InvalidConfiguration } = require('@genx/error');\nconst Feature = require('@genx/app/lib/enum/Feature');\n\n/**\n * Koa middleware function\n * @callback KoaActionFunction\n * @async\n * @param {object} ctx - The koa request and response context. [See koajs about ctx details]{@link http://koajs.com/#context}\n * @property {object} ctx.reqeust - The koa request object.\n * @property {object} ctx.response - The koa response object.\n * @param {KoaActionFunction} [next] - Next middleware or action.\n */\n\n/**\n * Enable koa-based web engine.\n * @module Feature_Koa \n */\n\nmodule.exports = {\n\n    /**\n     * This feature is loaded at service stage\n     * @member {string}\n     */\n    type: Feature.SERVICE,\n\n    /**\n     * Load the feature\n     * @param {WebServer} server - The web server\n     * @param {object} options - Options for the feature     \n     * @property {bool} [options.trustProxy] - When true proxy header fields will be trusted\n     * @property {Array.<string>} [options.keys] - Set signed cookie keys\n     * @property {int} [options.httpPort] - The http port number\n     * @property {int} [options.subdomainOffset=2] - The offset of subdomains to ignore, default: 2\n     * @returns {Promise.<*>}\n     */\n    load_: function (server, options) {\n        let koa = server.router;\n        server.koa = koa;\n        \n        koa.env = server.env;\n        koa.proxy = options.trustProxy && validator.toBoolean(options.trustProxy);\n\n        if (('subdomainOffset' in options) && options.subdomainOffset !== 2) {\n            if (options.subdomainOffset < 2) {\n                throw new InvalidConfiguration(\n                    'Invalid subdomainOffset. Should be larger or equal to 2.',\n                    appModule,\n                    'koa.subdomainOffset'\n                );\n            }\n\n            koa.subdomainOffset = options.subdomainOffset;\n        }\n\n        if (options.keys) {\n            if (!_.isArray(options.keys)) {\n                koa.keys = [ options.keys ];\n            } else {\n                koa.keys = options.keys;\n            }\n        }\n\n        koa.on('error', (err, ctx) => {\n            let extra = _.pick(err, [ 'status', 'code', 'info' ]);\n\n            if (ctx) {\n                extra.request = _.pick(ctx, ['method', 'url', 'ip']);\n            }\n\n            extra.app = ctx.appModule.name;\n\n            if (err.status && err.status < 500) {             \n                if (server.env === 'development') {\n                    extra.stack = err.stack;\n                }   \n                server.log('warn', `[${err.status}] ` + err.message, extra);\n                return;\n            } \n            \n            server.logError(err);\n        });                \n        \n        server.httpServer = require('http').createServer(koa.callback());                \n\n        let port = options.httpPort || 2331;\n\n        server.on('ready', () => {\n            server.httpServer.listen(port, function (err) {\n                if (err) throw err;\n\n                let address = server.httpServer.address();\n\n                let host;\n                if (address.family === 'IPv6' && address.address === '::') {\n                    host = '127.0.0.1';\n                } else {\n                    host = address.address;\n                }\n\n                server.host = `${host}:${address.port}`;\n                server.port = address.port;\n\n                server.log('info', `A http service is listening on port [${address.port}] ...`);\n                /**\n                 * Http server ready event\n                 * @event WebServer#httpReady\n                 */\n                server.emit('httpReady');\n            });\n        });\n    }\n};"],"file":"koa.js"}