"use strict";const{Errors:{GeneralError,InvalidArgument,InvalidConfiguration,ExposableError}}=require("@genx/app");const HttpCode=require("http-status-codes");class BadRequest extends ExposableError{constructor(message,info){super(message,info,HttpCode.BAD_REQUEST,"E_BAD_REQUEST")}}class NotFound extends ExposableError{constructor(message,info){super(message,info,HttpCode.NOT_FOUND,"E_NOT_FOUND")}}class Unauthorized extends ExposableError{constructor(message,info){super(message,info,HttpCode.UNAUTHORIZED,"E_UNAUTHENTICATED")}}class Forbidden extends ExposableError{constructor(message,info){super(message,info,HttpCode.FORBIDDEN,"E_FORBIDDEN")}}class ServiceUnavailable extends GeneralError{constructor(message,info){super(message,info,HttpCode.SERVICE_UNAVAILABLE,"E_UNAVAILABLE")}}class ServerError extends GeneralError{constructor(message,info){super(message,info,HttpCode.INTERNAL_SERVER_ERROR,"E_SERVER")}}class ExternalServiceError extends GeneralError{constructor(message,info){super(message,info,HttpCode.INTERNAL_SERVER_ERROR,"E_EXTERNAL")}}exports.InvalidArgument=InvalidArgument;exports.InvalidConfiguration=InvalidConfiguration;exports.BadRequest=BadRequest;exports.NotFound=NotFound;exports.Unauthorized=Unauthorized;exports.Unauthenticated=Unauthorized;exports.Forbidden=Forbidden;exports.ServerError=ServerError;exports.ExternalServiceError=ExternalServiceError;exports.ServiceUnavailable=ServiceUnavailable;