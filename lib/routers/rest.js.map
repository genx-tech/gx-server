{"version":3,"file":"rest.js","names":["path","require","_","text","glob","Router","Literal","hasMethod","module","exports","app","baseRoute","options","resourcePath","resolve","backendPath","resourcesPath","RESOURCES_PATH","router","prefix","dropIfEndsWith","useMiddleware","getMiddlewareFactory","errorOptions","middlewares","useMiddlewares","join","files","sync","nodir","each","file","relPath","relative","batchUrl","ensureStartsWith","substring","length","split","sep","map","p","kebabCase","singleUrl","controller","addRoute","ctx","query","create","detail","update","remove","addRouter"],"sources":["../../src/routers/rest.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\nconst { _, text } = require(\"@genx/july\");\nconst { glob } = require(\"@genx/sys\");\nconst Router = require(\"@koa/router\");\nconst Literal = require(\"../enum/Literal\");\nconst { hasMethod } = require(\"../utils/Helpers\");\n\n/**\n * RESTful router.\n * @module Router_Rest\n */\n\n/**\n * Create a RESTful router.\n * @param {*} app\n * @param {string} baseRoute\n * @param {objects} options\n * @property {string} [options.resourcesPath]\n * @property {object|array} [options.middlewares]\n * @example\n *  '<base path>': {\n *      rest: {\n *          resourcesPath:\n *          middlewares:\n *      }\n *  }\n *\n *  route                          http method    function of ctrl\n *  /:resource                     get            query\n *  /:resource                     post           create\n *  /:resource/:id                 get            detail\n *  /:resource/:id                 put            update\n *  /:resource/:id                 delete         remove\n */\nmodule.exports = (app, baseRoute, options) => {\n    let resourcePath = path.resolve(app.backendPath, options.resourcesPath || Literal.RESOURCES_PATH);\n\n    let router = baseRoute === \"/\" ? new Router() : new Router({ prefix: text.dropIfEndsWith(baseRoute, \"/\") });\n\n    app.useMiddleware(router, app.getMiddlewareFactory(\"jsonError\")(options.errorOptions, app), \"jsonError\");\n\n    if (options.middlewares) {\n        app.useMiddlewares(router, options.middlewares);\n    }\n\n    let resourcesPath = path.join(resourcePath, \"**\", \"*.js\");\n    let files = glob.sync(resourcesPath, { nodir: true });\n\n    _.each(files, (file) => {\n        let relPath = path.relative(resourcePath, file);\n        let batchUrl = text.ensureStartsWith(\n            relPath\n                .substring(0, relPath.length - 3)\n                .split(path.sep)\n                .map((p) => _.kebabCase(p))\n                .join(\"/\"),\n            \"/\"\n        );\n        let singleUrl = batchUrl + \"/:id\";\n\n        let controller = require(file);\n\n        if (typeof controller === \"function\") {\n            controller = new controller(app);\n        }\n\n        if (hasMethod(controller, \"query\")) {\n            app.addRoute(router, \"get\", batchUrl, (ctx) => controller.query(ctx));\n        }\n\n        if (hasMethod(controller, \"create\")) {\n            app.addRoute(router, \"post\", batchUrl, (ctx) => controller.create(ctx));\n        }\n\n        if (hasMethod(controller, \"detail\")) {\n            app.addRoute(router, \"get\", singleUrl, (ctx) => controller.detail(ctx));\n        }\n\n        if (hasMethod(controller, \"update\")) {\n            app.addRoute(router, \"put\", singleUrl, (ctx) => controller.update(ctx));\n        }\n\n        if (hasMethod(controller, \"remove\")) {\n            app.addRoute(router, \"del\", singleUrl, (ctx) => controller.remove(ctx));\n        }\n    });\n\n    app.addRouter(router);\n};\n"],"mappings":"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"}