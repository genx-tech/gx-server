{"version":3,"file":"markdown.js","names":["path","require","fs","_","text","cachePages","cacheLayout","defaultOpts","cache","titleHolder","bodyHolder","indexName","baseUrl","module","exports","options","app","assert","root","defaults","ensureEndsWith","dropIfStartsWith","layout","join","render","md","tryRequire","mdOptions","content","defaultLayout","ctx","next","method","pathname","startsWith","substr","length","html","getPage","type","body","filepath","r","Promise","all","getLayout","getContent","err","code","replaceAll","title","exists","readFile","slice","indexOf","trim","replace"],"sources":["../../src/middlewares/markdown.js"],"sourcesContent":["const path = require(\"path\");\nconst { fs } = require(\"@genx/sys\");\nconst { _, text } = require(\"@genx/july\");\n\n/**\n * Markdown middleware.\n * @module Middleware_Markdown\n */\n\nconst cachePages = {};\nlet cacheLayout;\n\nconst defaultOpts = {\n    cache: false,\n    titleHolder: \"{{TITLE}}\",\n    bodyHolder: \"{{BODY}}\",\n    indexName: \"index\",\n    baseUrl: \"/\",\n};\n\nmodule.exports = function (options, app) {\n    assert: options && options.root, \"options.root required\";\n\n    _.defaults(options, defaultOpts);\n\n    options.baseUrl = text.ensureEndsWith(text.dropIfStartsWith(options.baseUrl, '/'), '/');\n    options.layout = options.layout || path.join(options.root, \"layout.html\");\n\n    // support custom markdown render\n    if (typeof options.render !== \"function\") {\n        let md = app.tryRequire(\"markdown-it\")(options.mdOptions);\n        options.render = (content) => md.render(content);\n    }\n\n    const defaultLayout = `\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>{{TITLE}}</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <!-- Bootstrap -->\n    <link href=\"https://cdn.staticfile.org/twitter-bootstrap/3.0.0-rc1/css/bootstrap.min.css\" rel=\"stylesheet\" media=\"screen\">\n  </head>\n  <body>\n    <div class=\"container\">\n    {{BODY}}\n    </div>\n    <!-- JavaScript plugins (requires jQuery) -->\n    <script src=\"https://cdn.staticfile.org/jquery/2.0.3/jquery.min.js\"></script>\n    <!-- Include all compiled plugins (below), or include individual files as needed -->\n    <script src=\"https://cdn.staticfile.org/twitter-bootstrap/3.0.0-rc1/js/bootstrap.min.js\"></script>\n\n    <!-- Enable responsive features in IE8 with Respond.js (https://github.com/scottjehl/Respond) -->\n    <script src=\"https://cdn.staticfile.org/respond.js/1.2.0/respond.min.js\"></script>\n  </body>\n</html>\n`;\n\n    return async (ctx, next) => {\n        if (ctx.method !== \"GET\") {\n            return next();\n        }\n\n        let pathname = text.dropIfStartsWith(ctx.path, '/');\n        // get md file path\n\n        // index file\n        if (pathname + \"/\" === options.baseUrl || pathname === options.baseUrl) {\n            pathname = options.baseUrl + options.indexName;\n        } else if (!pathname.startsWith(options.baseUrl)) {\n            return next();\n        }\n\n        pathname = pathname.substr(options.baseUrl.length);\n        pathname = path.join(options.root, pathname + \".md\");\n\n        // generate html\n        let html = await getPage(pathname);\n        if (html === null) {\n            return next();\n        }\n        ctx.type = \"html\";\n        ctx.body = html;\n    };\n\n    async function getPage(filepath) {\n        if (options.cache && filepath in cachePages) {\n            return cachePages[filepath];\n        }\n        let r;\n        try {\n            r = await Promise.all([getLayout(), getContent(filepath)]);\n        } catch (err) {\n            if (err.code === \"ENOENT\") {\n                return null;\n            }\n            throw err;\n        }\n\n        let layout = r[0];\n        let content = r[1];\n        let html = text.replaceAll(layout, options.titleHolder, content.title);\n        html = text.replaceAll(html, options.bodyHolder, content.body);\n\n        if (options.cache) {\n            cachePages[filepath] = html;\n        }\n        return html;\n    }\n\n    async function getLayout() {\n        if (options.cache && cacheLayout) return cacheLayout;\n        let layout = (await fs.exists(options.layout)) ? await fs.readFile(options.layout, \"utf8\") : defaultLayout;\n        if (options.cache) cacheLayout = layout;\n        return layout;\n    }\n\n    async function getContent(filepath) {\n        let content = await fs.readFile(filepath, \"utf8\");\n        let title = content\n            .slice(0, content.indexOf(\"\\n\"))\n            .trim()\n            .replace(/^[#\\s]+/, \"\");\n        let body = options.render(content);\n        return {\n            title: title,\n            body: body,\n        };\n    }\n};\n"],"mappings":"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"}