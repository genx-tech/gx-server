{"version":3,"file":"serverPassport.js","names":["require","InvalidConfiguration","BadRequest","requireFeatures","serverPassport","opt","app","passportService","getService","middlewares","module","exports"],"sources":["../../src/middlewares/serverPassport.js"],"sourcesContent":["\"use strict\";\n\nconst { InvalidConfiguration, BadRequest } = require('@genx/error');\nconst { requireFeatures } = require('../utils/Helpers');\n\n/**\n * Passport initialization middleware, use the passport service exposed by other app to server.\n * @module Middleware_ServerPassport\n */\n\n/**\n * Create a passport authentication middleware.\n * @param {object} opt - Passport options\n * @property {string} opt.strategy - Passport strategy\n * @property {object} [opt.options] - Passport strategy options\n * @property {object} [opt.customHandler] - Flag to use passport strategy customHandler \n * @param {Routable} app\n * @returns {KoaActionFunction}\n */\nlet serverPassport = (opt, app) => {\n    \n    let passportService = app.getService('passport');\n\n    if (!passportService) {\n        throw new InvalidConfiguration(\n            'Passport feature is not enabled.',\n            app,\n            'passport'\n        );\n    }\n\n    return passportService.middlewares;\n};\n\nmodule.exports = serverPassport;"],"mappings":"AAAA,YAAY;;AAACA,OAAA;AAEb,MAAM;EAAEC,oBAAoB;EAAEC;AAAW,CAAC,GAAGF,OAAO,CAAC,aAAa,CAAC;AACnE,MAAM;EAAEG;AAAgB,CAAC,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAgBvD,IAAII,cAAc,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;EAE/B,IAAIC,eAAe,GAAGD,GAAG,CAACE,UAAU,CAAC,UAAU,CAAC;EAEhD,IAAI,CAACD,eAAe,EAAE;IAClB,MAAM,IAAIN,oBAAoB,CAC1B,kCAAkC,EAClCK,GAAG,EACH,UACJ,CAAC;EACL;EAEA,OAAOC,eAAe,CAACE,WAAW;AACtC,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGP,cAAc"}