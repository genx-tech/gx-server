{"version":3,"file":"passportCheck.js","names":["require","HttpCode","module","exports","options","app","ctx","next","isAuthenticated","successReturnToOrRedirect","session","returnTo","originalUrl","url","loginUrl","throw","UNAUTHORIZED","redirect"],"sources":["../../src/middlewares/passportCheck.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Middleware to check user logged in status based on passport\n * @module Middleware_PassportCheck\n */\n\nconst HttpCode = require('http-status-codes');\n\n/**\n * Initialize ensureLoggedIn middleware\n * @param {object} options\n * @property {string} [options.loginUrl] - If given, will redirect to loginUrl if not loggedIn\n * @property {boolean} [options.successReturnToOrRedirect] - If given, will redirect to loginUrl if not loggedIn \n * @param {Routable} app\n */  \nmodule.exports = (options, app) => {\n    return async (ctx, next) => {\n        if (ctx.isAuthenticated()) {\n            return next();\n        }\n\n        if (options.successReturnToOrRedirect && ctx.session) {\n            ctx.session.returnTo = ctx.originalUrl || ctx.url;            \n        }\n\n        if (!options.loginUrl) {\n            ctx.throw(HttpCode.UNAUTHORIZED, 'authentication required');\n        }\n\n        return ctx.redirect(options.loginUrl);\n    }\n};"],"mappings":"AAAA,YAAY;AAACA,OAAA;AAOb,MAAMC,QAAQ,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAS7CE,MAAM,CAACC,OAAO,GAAG,CAACC,OAAO,EAAEC,GAAG,KAAK;EAC/B,OAAO,OAAOC,GAAG,EAAEC,IAAI,KAAK;IACxB,IAAID,GAAG,CAACE,eAAe,CAAC,CAAC,EAAE;MACvB,OAAOD,IAAI,CAAC,CAAC;IACjB;IAEA,IAAIH,OAAO,CAACK,yBAAyB,IAAIH,GAAG,CAACI,OAAO,EAAE;MAClDJ,GAAG,CAACI,OAAO,CAACC,QAAQ,GAAGL,GAAG,CAACM,WAAW,IAAIN,GAAG,CAACO,GAAG;IACrD;IAEA,IAAI,CAACT,OAAO,CAACU,QAAQ,EAAE;MACnBR,GAAG,CAACS,KAAK,CAACd,QAAQ,CAACe,YAAY,EAAE,yBAAyB,CAAC;IAC/D;IAEA,OAAOV,GAAG,CAACW,QAAQ,CAACb,OAAO,CAACU,QAAQ,CAAC;EACzC,CAAC;AACL,CAAC"}