{"version":3,"file":"Routable.js","names":["path","require","fs","glob","_","url","urlUtil","text","ApplicationError","InvalidConfiguration","Literal","Koa","mount","Routable","T","constructor","name","options","clientPath","toAbsolutePath","CLIENT_SRC_PATH","publicPath","PUBLIC_PATH","routable","router","use","ctx","next","appModule","on","middlewareDir","join","backendPath","MIDDLEWARES_PATH","existsSync","loadMiddlewaresFrom","start_","middlewareFactoryRegistry","stop_","getBackendAction","actionByPath","lpos","lastIndexOf","Error","controller","substr","method","controllerObj","resolve","error","methodFunc","dir","files","sync","nodir","forEach","file","registerMiddlewareFactory","basename","factoryMethod","pre","log","getMiddlewareFactory","hasOwnProperty","server","npmMiddleware","tryRequire","useMiddlewares","middlewares","middlewareFactory","middleware","middlewareFunctions","isPlainObject","forOwn","push","castArray","each","middlewareEntry","type","undefined","Array","isArray","length","m","useMiddleware","addRoute","route","actions","handlers","_wrapMiddlewareTracer","lastIndex","action","i","middlewareItem","assert","endpoint","opts","prefix","addRouter","nestedRouter","routes","allowedMethods","mountRouter","toWebPath","relativePath","pathOrQuery","query","isObject","pop","unshift","ensureStartsWith","appendQuery","replace","traceMiddlewares","ret","_getFeatureFallbackPath","concat","FEATURES_PATH","module","exports"],"sources":["../src/Routable.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\nconst { fs, glob } = require(\"@genx/sys\");\nconst { _, url: urlUtil, text } = require(\"@genx/july\");\nconst { ApplicationError, InvalidConfiguration } = require(\"@genx/error\");\nconst Literal = require(\"./enum/Literal\");\nconst Koa = require(\"koa\");\nconst mount = require(\"koa-mount\");\n\nconst Routable = (T) =>\n    class extends T {\n        /**\n         * @param {string} name - The name of the routable instance.\n         * @param {object} [options] - Routable options\n         * @property {string} [options.backendPath='server'] - Relative path of back-end server source files\n         * @property {string} [options.clientPath='client'] - Relative path of front-end client source files\n         * @property {string} [options.publicPath='public'] - Relative path of front-end static files\n         */\n        constructor(name, options) {\n            super(name, options);\n\n            /**\n             * Frontend source files path.\n             * @member {string}\n             **/\n            this.clientPath = this.toAbsolutePath(this.options.clientPath || Literal.CLIENT_SRC_PATH);\n\n            /**\n             * Frontend static files path.\n             * @member {string}\n             **/\n            this.publicPath = this.toAbsolutePath(this.options.publicPath || Literal.PUBLIC_PATH);\n\n            this.routable = true;\n\n            /**\n             * Each app has its own router.\n             * @member {Koa}\n             **/\n            this.router = new Koa();\n\n            //inject the appModule instance in the first middleware\n            this.router.use((ctx, next) => {\n                ctx.appModule = this;\n                return next();\n            });\n\n            this.on(\"configLoaded\", () => {\n                //load middlewares if exists in server or app path\n                let middlewareDir = path.join(this.backendPath, Literal.MIDDLEWARES_PATH);\n\n                if (fs.existsSync(middlewareDir)) {\n                    this.loadMiddlewaresFrom(middlewareDir);\n                }\n            });\n        }\n\n        async start_() {\n            /**\n             * Middleware factory registry.\n             * @member {object}\n             */\n            this.middlewareFactoryRegistry = {};\n\n            return super.start_();\n        }\n\n        async stop_() {\n            delete this.middlewareFactoryRegistry;\n\n            return super.stop_();\n        }\n\n        getBackendAction(actionByPath) {\n            let lpos = actionByPath.lastIndexOf(\".\");\n\n            if (lpos === -1) {\n                throw new Error(`Invalid action path: ${actionByPath}`);\n            }\n\n            let controller = actionByPath.substr(0, lpos);\n            let method = actionByPath.substr(lpos + 1);\n            let controllerObj;\n\n            try {\n                controllerObj = require(path.resolve(this.backendPath, controller));\n            } catch (error) {\n                throw new Error(`Backend controller not found: ${controller}`);\n            }\n\n            let methodFunc = controllerObj[method];\n            if (typeof methodFunc !== \"function\") {\n                throw new Error(`The specified action is not a function: ${actionByPath}`);\n            }\n\n            return methodFunc;\n        }\n\n        /**\n         * Load and regsiter middleware files from a specified path.\n         * @param dir\n         */\n        loadMiddlewaresFrom(dir) {\n            let files = glob.sync(path.join(dir, \"*.js\"), { nodir: true });\n            files.forEach((file) => this.registerMiddlewareFactory(path.basename(file, \".js\"), require(file)));\n        }\n\n        /**\n         * Register the factory method of a named middleware.\n         * @param {string} name - The name of the middleware\n         * @param {function} factoryMethod - The factory method of a middleware\n         */\n        registerMiddlewareFactory(name, factoryMethod) {\n            pre: typeof factoryMethod === \"function\", \"Invalid middleware factory: \" + name;\n\n            if (name in this.middlewareFactoryRegistry) {\n                throw new ApplicationError('Middleware \"' + name + '\" already registered!');\n            }\n\n            this.middlewareFactoryRegistry[name] = factoryMethod;\n            this.log(\"verbose\", `Registered named middleware [${name}].`);\n        }\n\n        /**\n         * Get the factory method of a middleware from module hierarchy.\n         * @param name\n         * @returns {function}\n         */\n        getMiddlewareFactory(name) {\n            if (this.middlewareFactoryRegistry.hasOwnProperty(name)) {\n                return this.middlewareFactoryRegistry[name];\n            }\n\n            if (this.server && this.server !== this) {\n                return this.server.getMiddlewareFactory(name);\n            }\n\n            let npmMiddleware = this.tryRequire(name);\n            if (npmMiddleware) {\n                return npmMiddleware;\n            }\n\n            throw new ApplicationError(`Don't know where to load middleware \"${name}\".`);\n        }\n\n        /**\n         * Use middlewares\n         * @param {Router} router\n         * @param {*} middlewares - Can be an array of middleware entries or a key-value list of registerred middlewares\n         * @returns {Routable}\n         */\n        useMiddlewares(router, middlewares) {\n            let middlewareFactory, middleware;\n            let middlewareFunctions = [];\n\n            if (_.isPlainObject(middlewares)) {\n                _.forOwn(middlewares, (options, name) => {\n                    middlewareFactory = this.getMiddlewareFactory(name);\n                    middleware = middlewareFactory(options, this);\n                    middlewareFunctions.push({ name, middleware });\n                });\n            } else {\n                middlewares = _.castArray(middlewares);\n\n                _.each(middlewares, (middlewareEntry) => {\n                    let type = typeof middlewareEntry;\n\n                    if (type === \"string\") {\n                        // [ 'namedMiddleware' ]\n                        middlewareFactory = this.getMiddlewareFactory(middlewareEntry);\n                        middleware = middlewareFactory(undefined, this);\n                        middlewareFunctions.push({ name: middlewareEntry, middleware });\n                    } else if (type === \"function\") {\n                        middlewareFunctions.push({\n                            name: middlewareEntry.name || \"unamed middleware\",\n                            middleware: middlewareEntry,\n                        });\n                    } else if (Array.isArray(middlewareEntry)) {\n                        // [ [ 'namedMiddleware', config ] ]\n                        if (middlewareEntry.length === 0) {\n                            throw new InvalidConfiguration(\n                                \"Empty array found as middleware entry!\",\n                                this,\n                                \"middlewares\"\n                            );\n                        }\n\n                        middlewareFactory = this.getMiddlewareFactory(middlewareEntry[0]);\n                        middleware = middlewareFactory(middlewareEntry.length > 1 ? middlewareEntry[1] : null, this);\n                        middlewareFunctions.push({ name: middlewareEntry[0], middleware });\n                    } else {\n                        if (!_.isPlainObject(middlewareEntry) || !(\"name\" in middlewareEntry)) {\n                            throw new InvalidConfiguration(\"Invalid middleware entry!\", this, \"middlewares\");\n                        }\n\n                        middlewareFactory = this.getMiddlewareFactory(middlewareEntry.name);\n                        middleware = middlewareFactory(middlewareEntry.options, this);\n                        middlewareFunctions.push({ name: middlewareEntry.name, middleware });\n                    }\n                });\n            }\n\n            middlewareFunctions.forEach(({ name, middleware }) => {\n                if (Array.isArray(middleware)) {\n                    middleware.forEach((m) => this.useMiddleware(router, m, name));\n                } else {\n                    this.useMiddleware(router, middleware, name);\n                }\n            });\n\n            return this;\n        }\n\n        /**\n         * Add a route to a router, skipped while the server running in deaf mode.\n         * @param router\n         * @param method\n         * @param route\n         * @param actions\n         */\n        addRoute(router, method, route, actions) {\n            let handlers = [],\n                middlewareFactory;\n\n            if (_.isPlainObject(actions)) {\n                _.forOwn(actions, (options, name) => {\n                    middlewareFactory = this.getMiddlewareFactory(name);\n                    handlers.push(this._wrapMiddlewareTracer(middlewareFactory(options, this), name));\n                });\n            } else {\n                actions = _.castArray(actions);\n                let lastIndex = actions.length - 1;\n\n                _.each(actions, (action, i) => {\n                    let type = typeof action;\n\n                    if (i === lastIndex) {\n                        // last middleware may be an action\n                        if (type === \"string\" && action.lastIndexOf(\".\") > 0) {\n                            action = {\n                                name: \"action\",\n                                options: action,\n                            };\n\n                            type = \"object\";\n                        }\n                    }\n\n                    if (type === \"string\") {\n                        // [ 'namedMiddleware' ]\n                        middlewareFactory = this.getMiddlewareFactory(action);\n\n                        let middleware = middlewareFactory(null, this);\n\n                        //in case it's register by the middlewareFactory feature\n                        if (Array.isArray(middleware)) {\n                            middleware.forEach((middlewareItem, i) =>\n                                handlers.push(\n                                    this._wrapMiddlewareTracer(\n                                        middlewareItem,\n                                        `${action}-${i}` + (middleware.name ? \"-\" + middleware.name : \"\")\n                                    )\n                                )\n                            );\n                        } else {\n                            handlers.push(this._wrapMiddlewareTracer(middleware, action));\n                        }\n                    } else if (type === \"function\") {\n                        handlers.push(this._wrapMiddlewareTracer(action));\n                    } else if (Array.isArray(action)) {\n                        assert: action.length > 0 && action.length <= 2, \"Invalid middleware entry\";\n\n                        middlewareFactory = this.getMiddlewareFactory(action[0]);\n                        handlers.push(\n                            this._wrapMiddlewareTracer(\n                                middlewareFactory(action.length > 1 ? action[1] : undefined, this)\n                            )\n                        );\n                    } else {\n                        assert: _.isPlainObject(action) && \"name\" in action, \"Invalid middleware entry\";\n\n                        middlewareFactory = this.getMiddlewareFactory(action.name);\n                        handlers.push(this._wrapMiddlewareTracer(middlewareFactory(action.options, this), action.name));\n                    }\n                });\n            }\n\n            router[method](route, ...handlers);\n\n            let endpoint = router.opts.prefix\n                ? urlUtil.join(this.route, router.opts.prefix, route)\n                : urlUtil.join(this.route, route);\n\n            this.log(\"verbose\", `Route \"${method}:${endpoint}\" is added from module [${this.name}].`);\n\n            return this;\n        }\n\n        /**\n         * Attach a router to this app module, skipped while the server running in deaf mode\n         * @param {Router} nestedRouter\n         */\n        addRouter(nestedRouter) {\n            this.router.use(nestedRouter.routes());\n            this.router.use(nestedRouter.allowedMethods());\n\n            //for debugging all registered routes\n            //console.log(nestedRouter.stack.map(i => i.path));\n            return this;\n        }\n\n        /**\n         * Attach a router to this app module by mounting the router to a route\n         * @param {*} route\n         * @param {*} router\n         */\n        mountRouter(route, router) {\n            this.router.use(mount(route, router));\n        }\n\n        /**\n         * Translate a relative path and query parameters if any to a url path\n         * @param {string} relativePath - Relative path\n         * @param {...*} [pathOrQuery] - Queries\n         * @returns {string}\n         */\n        toWebPath(relativePath, ...pathOrQuery) {\n            let url, query;\n\n            if (pathOrQuery && pathOrQuery.length > 0 && (pathOrQuery.length > 1 || pathOrQuery[0] !== undefined)) {\n                if (_.isObject(pathOrQuery[pathOrQuery.length - 1])) {\n                    query = pathOrQuery.pop();\n                }\n                pathOrQuery.unshift(relativePath);\n                url = urlUtil.join(this.route, ...pathOrQuery);\n            } else {\n                url = urlUtil.join(this.route, relativePath);\n            }\n\n            url = text.ensureStartsWith(url, \"/\");\n\n            if (query) {\n                url = urlUtil.appendQuery(url, query);\n                url = url.replace(\"/?\", \"?\");\n            }\n\n            return url;\n        }\n\n        useMiddleware(router, middleware, name) {\n            assert: typeof middleware === \"function\", middleware;\n            router.use(this._wrapMiddlewareTracer(middleware, name));\n            this.log(\"verbose\", `Attached middleware [${name}].`);\n        }\n\n        _wrapMiddlewareTracer(middleware, name) {\n            if (this.options.traceMiddlewares) {\n                return async (ctx, next) => {\n                    this.log(\"debug\", `Step in middleware \"${name || middleware.name}\" ...`);\n                    let ret = await middleware(ctx, next);\n                    this.log(\"debug\", `Step out from middleware \"${name || middleware.name}\".`);\n                    return ret;\n                };\n            }\n\n            return middleware;\n        }\n\n        _getFeatureFallbackPath() {\n            return super._getFeatureFallbackPath().concat([path.join(this.backendPath, Literal.FEATURES_PATH)]);\n        }\n    };\n\nmodule.exports = Routable;\n"],"mappings":"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"}