{"version":3,"sources":["../../src/utils/Controller.js"],"names":["require","Controller","constructor","ctx","app","appModule","config","server","apiWrapper","getService","settings","apiWrapperService","ApplicationError","db","name","tryTtlCache","key","query","ttlCache","_cache","get","send","result","payload","ttlCacheInfo","body","wrapResult","value","push","set","ttl","cache","factory","module","exports"],"mappings":";;;;AAAA,MAAM,KAAMA,OAAO,CAAC,aAAD,CAAnB;;AAEA,MAAMC,UAAN,CAAiB;AACbC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AAEA,SAAKC,GAAL,GAAW,KAAKD,GAAL,CAASE,SAApB;AAEA,SAAKC,MAAL,GAAc,KAAKF,GAAL,CAASG,MAAT,CAAgBD,MAA9B;AAEA,SAAKE,UAAL,GAAkB,KAAKJ,GAAL,CAASK,UAAT,CAAoB,KAAKH,MAAL,CAAYI,QAAZ,CAAqBC,iBAArB,IAA0C,YAA9D,CAAlB;;AAEA,QAAI,CAAC,KAAKH,UAAV,EAAsB;AAClB,YAAM,IAAII,gBAAJ,CAAqB,oEAArB,CAAN;AACH;AACJ;;AAEDC,EAAAA,EAAE,CAACC,IAAD,EAAO;AACL,WAAO,KAAKV,GAAL,CAASS,EAAT,CAAYC,IAAI,IAAI,KAAKV,GAAL,CAASM,QAAT,CAAkBG,EAAtC,CAAP;AACH;;AAEDE,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,QAAI,KAAKb,GAAL,CAASc,KAAT,CAAe,UAAf,CAAJ,EAAgC;AAC5B,aAAO,KAAP;AACH;;AAED,UAAMC,QAAQ,GAAG,KAAKd,GAAL,CAASK,UAAT,CAAoB,aAApB,CAAjB;;AACA,QAAI,CAACS,QAAL,EAAe;AACX,YAAM,IAAIN,gBAAJ,CAAqB,sFAArB,CAAN;AACH;;AAED,UAAMO,MAAM,GAAGD,QAAQ,CAACE,GAAT,CAAaJ,GAAb,CAAf;;AACA,QAAIG,MAAJ,EAAY;AACR,WAAKE,IAAL,CAAU,KAAKlB,GAAf,EAAoB,GAAGgB,MAAvB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAEDE,EAAAA,IAAI,CAACC,MAAD,EAASC,OAAT,EAAkBC,YAAlB,EAAgC;AAChC,SAAKrB,GAAL,CAASsB,IAAT,GAAgB,KAAKjB,UAAL,CAAgBkB,UAAhB,CAA2B,KAAKvB,GAAhC,EAAqCmB,MAArC,EAA6CC,OAA7C,CAAhB;;AACA,QAAIC,YAAJ,EAAkB;AACd,YAAMN,QAAQ,GAAG,KAAKd,GAAL,CAASK,UAAT,CAAoB,aAApB,CAAjB;AACA,YAAMkB,KAAK,GAAG,CAACL,MAAD,CAAd;;AACA,UAAIC,OAAJ,EAAa;AACTI,QAAAA,KAAK,CAACC,IAAN,CAAWL,OAAX;AACH;;AACDL,MAAAA,QAAQ,CAACW,GAAT,CAAaL,YAAY,CAACR,GAA1B,EAA+B,CAACM,MAAD,EAASC,OAAT,CAA/B,EAAkDC,YAAY,CAACM,GAA/D;AACH;AAEJ;;AAEDC,EAAAA,KAAK,CAACf,GAAD,EAAMgB,OAAN,EAAe;AAChB,QAAI,CAAC,KAAKb,MAAV,EAAkB;AACd,WAAKA,MAAL,GAAc,EAAd;AACH;;AAED,QAAIQ,KAAK,GAAG,KAAKR,MAAL,CAAYH,GAAZ,CAAZ;;AACA,QAAIW,KAAK,IAAI,IAAb,EAAmB;AACfA,MAAAA,KAAK,GAAG,KAAKR,MAAL,CAAYH,GAAZ,IAAmBgB,OAAO,EAAlC;AACH;;AAED,WAAOL,KAAP;AACH;;AA7DY;;AAgEjBM,MAAM,CAACC,OAAP,GAAiBjC,UAAjB","sourcesContent":["const { } = require('@genx/error');\n\nclass Controller {\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.app = this.ctx.appModule;\n\n        this.config = this.app.server.config;\n\n        this.apiWrapper = this.app.getService(this.config.settings.apiWrapperService || 'apiWrapper');\n\n        if (!this.apiWrapper) {\n            throw new ApplicationError('\"apiWrapper\" service is required when using the Controller helper.');\n        }\n    }\n\n    db(name) {\n        return this.app.db(name || this.app.settings.db);\n    }\n\n    tryTtlCache(key) {\n        if (this.ctx.query['no-cache']) {\n            return false;\n        }\n\n        const ttlCache = this.app.getService('ttlMemCache');\n        if (!ttlCache) {\n            throw new ApplicationError('\"ttlMemCache\" service is required. Please check npm module \"@genx/app-feat-commons\".');\n        }\n\n        const _cache = ttlCache.get(key);\n        if (_cache) {\n            this.send(this.ctx, ..._cache);\n            return true;\n        }\n        return false;\n    }\n\n    send(result, payload, ttlCacheInfo) {\n        this.ctx.body = this.apiWrapper.wrapResult(this.ctx, result, payload);\n        if (ttlCacheInfo) {\n            const ttlCache = this.app.getService('ttlMemCache');\n            const value = [result];\n            if (payload) {\n                value.push(payload);\n            }\n            ttlCache.set(ttlCacheInfo.key, [result, payload], ttlCacheInfo.ttl);\n        }\n\n    }\n\n    cache(key, factory) {\n        if (!this._cache) {\n            this._cache = {};\n        }\n\n        let value = this._cache[key];\n        if (value == null) {\n            value = this._cache[key] = factory();\n        }\n\n        return value;\n    }\n}\n\nmodule.exports = Controller;\n"],"file":"Controller.js"}