{"version":3,"sources":["../../src/middlewares/serverPassport.js"],"names":["InvalidConfiguration","BadRequest","require","requireFeatures","serverPassport","opt","app","passportService","getService","middlewares","module","exports"],"mappings":"AAAA;;;;AAEA,MAAM;AAAEA,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,IAAuCC,OAAO,CAAC,aAAD,CAApD;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,kBAAD,CAAnC;;AAgBA,IAAIE,cAAc,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAE/B,MAAIC,eAAe,GAAGD,GAAG,CAACE,UAAJ,CAAe,UAAf,CAAtB;;AAEA,MAAI,CAACD,eAAL,EAAsB;AAClB,UAAM,IAAIP,oBAAJ,CACF,kCADE,EAEFM,GAFE,EAGF,UAHE,CAAN;AAKH;;AAED,SAAOC,eAAe,CAACE,WAAvB;AACH,CAbD;;AAeAC,MAAM,CAACC,OAAP,GAAiBP,cAAjB","sourcesContent":["\"use strict\";\n\nconst { InvalidConfiguration, BadRequest } = require('@genx/error');\nconst { requireFeatures } = require('../utils/Helpers');\n\n/**\n * Passport initialization middleware, use the passport service exposed by other app to server.\n * @module Middleware_ServerPassport\n */\n\n/**\n * Create a passport authentication middleware.\n * @param {object} opt - Passport options\n * @property {string} opt.strategy - Passport strategy\n * @property {object} [opt.options] - Passport strategy options\n * @property {object} [opt.customHandler] - Flag to use passport strategy customHandler \n * @param {Routable} app\n * @returns {KoaActionFunction}\n */\nlet serverPassport = (opt, app) => {\n    \n    let passportService = app.getService('passport');\n\n    if (!passportService) {\n        throw new InvalidConfiguration(\n            'Passport feature is not enabled.',\n            app,\n            'passport'\n        );\n    }\n\n    return passportService.middlewares;\n};\n\nmodule.exports = serverPassport;"],"file":"serverPassport.js"}