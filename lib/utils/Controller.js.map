{"version":3,"sources":["../../src/utils/Controller.js"],"names":["require","Controller","constructor","app","apiWrapper","getService","settings","apiWrapperService","ApplicationError","db","name","tryTtlCache","ctx","key","query","ttlCache","_cache","get","send","result","payload","ttlCacheInfo","body","wrapResult","value","push","set","ttl","cache","factory","module","exports"],"mappings":";;;;AAAA,MAAM,KAAOA,OAAO,CAAC,aAAD,CAApB;;AAEA,MAAMC,UAAN,CAAiB;AACbC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,UAAL,GAAkB,KAAKD,GAAL,CAASE,UAAT,CAAoB,KAAKF,GAAL,CAASG,QAAT,CAAkBC,iBAAlB,IAAuC,YAA3D,CAAlB;;AAEA,QAAI,CAAC,KAAKH,UAAV,EAAsB;AAClB,YAAM,IAAII,gBAAJ,CAAqB,oEAArB,CAAN;AACH;AACJ;;AAEDC,EAAAA,EAAE,CAACC,IAAD,EAAO;AACL,WAAO,KAAKP,GAAL,CAASM,EAAT,CAAYC,IAAI,IAAI,KAAKP,GAAL,CAASG,QAAT,CAAkBG,EAAtC,CAAP;AACH;;AAEDE,EAAAA,WAAW,CAACC,GAAD,EAAMC,GAAN,EAAW;AAClB,QAAID,GAAG,CAACE,KAAJ,CAAU,UAAV,CAAJ,EAA2B;AACvB,aAAO,KAAP;AACH;;AAED,UAAMC,QAAQ,GAAG,KAAKZ,GAAL,CAASE,UAAT,CAAoB,aAApB,CAAjB;;AACA,QAAI,CAACU,QAAL,EAAe;AACX,YAAM,IAAIP,gBAAJ,CAAqB,sFAArB,CAAN;AACH;;AAED,UAAMQ,MAAM,GAAGD,QAAQ,CAACE,GAAT,CAAaJ,GAAb,CAAf;;AACA,QAAIG,MAAJ,EAAY;AACR,WAAKE,IAAL,CAAUN,GAAV,EAAe,GAAGI,MAAlB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAEDE,EAAAA,IAAI,CAACN,GAAD,EAAMO,MAAN,EAAcC,OAAd,EAAuBC,YAAvB,EAAqC;AACrCT,IAAAA,GAAG,CAACU,IAAJ,GAAW,KAAKlB,UAAL,CAAgBmB,UAAhB,CAA2BX,GAA3B,EAAgCO,MAAhC,EAAwCC,OAAxC,CAAX;;AACA,QAAIC,YAAJ,EAAkB;AACd,YAAMN,QAAQ,GAAG,KAAKZ,GAAL,CAASE,UAAT,CAAoB,aAApB,CAAjB;AACA,YAAMmB,KAAK,GAAG,CAACL,MAAD,CAAd;;AACA,UAAIC,OAAJ,EAAa;AACTI,QAAAA,KAAK,CAACC,IAAN,CAAWL,OAAX;AACH;;AACDL,MAAAA,QAAQ,CAACW,GAAT,CAAaL,YAAY,CAACR,GAA1B,EAA+B,CAACM,MAAD,EAASC,OAAT,CAA/B,EAAkDC,YAAY,CAACM,GAA/D;AACH;AACJ;;AAEDC,EAAAA,KAAK,CAACf,GAAD,EAAMgB,OAAN,EAAe;AAChB,QAAI,CAAC,KAAKb,MAAV,EAAkB;AACd,WAAKA,MAAL,GAAc,EAAd;AACH;;AAED,QAAIQ,KAAK,GAAG,KAAKR,MAAL,CAAYH,GAAZ,CAAZ;;AACA,QAAIW,KAAK,IAAI,IAAb,EAAmB;AACfA,MAAAA,KAAK,GAAG,KAAKR,MAAL,CAAYH,GAAZ,IAAmBgB,OAAO,EAAlC;AACH;;AAED,WAAOL,KAAP;AACH;;AAvDY;;AA0DjBM,MAAM,CAACC,OAAP,GAAiB9B,UAAjB","sourcesContent":["const {  } = require('@genx/error');\n\nclass Controller {\n    constructor(app) {\n        this.app = app;\n        this.apiWrapper = this.app.getService(this.app.settings.apiWrapperService || 'apiWrapper');\n\n        if (!this.apiWrapper) {\n            throw new ApplicationError('\"apiWrapper\" service is required when using the Controller helper.');\n        }\n    }\n\n    db(name) {\n        return this.app.db(name || this.app.settings.db);\n    }\n\n    tryTtlCache(ctx, key) {\n        if (ctx.query['no-cache']) {\n            return false;\n        }\n\n        const ttlCache = this.app.getService('ttlMemCache');\n        if (!ttlCache) {\n            throw new ApplicationError('\"ttlMemCache\" service is required. Please check npm module \"@genx/app-feat-commons\".');\n        }\n\n        const _cache = ttlCache.get(key);\n        if (_cache) {\n            this.send(ctx, ..._cache);\n            return true;\n        }\n        return false;\n    }\n\n    send(ctx, result, payload, ttlCacheInfo) {\n        ctx.body = this.apiWrapper.wrapResult(ctx, result, payload);\n        if (ttlCacheInfo) {\n            const ttlCache = this.app.getService('ttlMemCache');\n            const value = [result];\n            if (payload) {\n                value.push(payload);\n            }\n            ttlCache.set(ttlCacheInfo.key, [result, payload], ttlCacheInfo.ttl);\n        }\n    }\n\n    cache(key, factory) {\n        if (!this._cache) {\n            this._cache = {};\n        }\n\n        let value = this._cache[key];\n        if (value == null) {\n            value = this._cache[key] = factory();\n        }\n\n        return value;\n    }\n}\n\nmodule.exports = Controller;\n"],"file":"Controller.js"}