"use strict";

require("source-map-support/register");

const {
  _,
  ensureLeftSlash,
  trimRightSlash
} = require('rk-utils');

const path = require('path');

const {
  ServiceContainer
} = require('@genx/app');

const ModuleBase = require('./ModuleBase');

const Routable = require('./Routable');

const Literal = require('./enum/Literal');

class WebModule extends ModuleBase(Routable(ServiceContainer)) {
  constructor(server, name, route, appPath, options) {
    super(server, name, appPath, options);
    this.route = ensureLeftSlash(trimRightSlash(route));
  }

  _getFeatureFallbackPath() {
    let pathArray = super._getFeatureFallbackPath();

    pathArray.splice(2, 0, path.resolve(__dirname, Literal.APP_FEATURES_PATH));
    return pathArray;
  }

}

module.exports = WebModule;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9XZWJNb2R1bGUuanMiXSwibmFtZXMiOlsiXyIsImVuc3VyZUxlZnRTbGFzaCIsInRyaW1SaWdodFNsYXNoIiwicmVxdWlyZSIsInBhdGgiLCJTZXJ2aWNlQ29udGFpbmVyIiwiTW9kdWxlQmFzZSIsIlJvdXRhYmxlIiwiTGl0ZXJhbCIsIldlYk1vZHVsZSIsImNvbnN0cnVjdG9yIiwic2VydmVyIiwibmFtZSIsInJvdXRlIiwiYXBwUGF0aCIsIm9wdGlvbnMiLCJfZ2V0RmVhdHVyZUZhbGxiYWNrUGF0aCIsInBhdGhBcnJheSIsInNwbGljZSIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJBUFBfRkVBVFVSRVNfUEFUSCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsTUFBTTtBQUFFQSxFQUFBQSxDQUFGO0FBQUtDLEVBQUFBLGVBQUw7QUFBc0JDLEVBQUFBO0FBQXRCLElBQXlDQyxPQUFPLENBQUMsVUFBRCxDQUF0RDs7QUFDQSxNQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU07QUFBRUUsRUFBQUE7QUFBRixJQUF1QkYsT0FBTyxDQUFDLFdBQUQsQ0FBcEM7O0FBQ0EsTUFBTUcsVUFBVSxHQUFHSCxPQUFPLENBQUMsY0FBRCxDQUExQjs7QUFDQSxNQUFNSSxRQUFRLEdBQUdKLE9BQU8sQ0FBQyxZQUFELENBQXhCOztBQUNBLE1BQU1LLE9BQU8sR0FBR0wsT0FBTyxDQUFDLGdCQUFELENBQXZCOztBQU9BLE1BQU1NLFNBQU4sU0FBd0JILFVBQVUsQ0FBQ0MsUUFBUSxDQUFDRixnQkFBRCxDQUFULENBQWxDLENBQStEO0FBUzNESyxFQUFBQSxXQUFXLENBQUNDLE1BQUQsRUFBU0MsSUFBVCxFQUFlQyxLQUFmLEVBQXNCQyxPQUF0QixFQUErQkMsT0FBL0IsRUFBd0M7QUFDL0MsVUFBTUosTUFBTixFQUFjQyxJQUFkLEVBQW9CRSxPQUFwQixFQUE2QkMsT0FBN0I7QUFNQSxTQUFLRixLQUFMLEdBQWFaLGVBQWUsQ0FBQ0MsY0FBYyxDQUFDVyxLQUFELENBQWYsQ0FBNUI7QUFDSDs7QUFFREcsRUFBQUEsdUJBQXVCLEdBQUc7QUFDdEIsUUFBSUMsU0FBUyxHQUFHLE1BQU1ELHVCQUFOLEVBQWhCOztBQUNBQyxJQUFBQSxTQUFTLENBQUNDLE1BQVYsQ0FBaUIsQ0FBakIsRUFBb0IsQ0FBcEIsRUFBdUJkLElBQUksQ0FBQ2UsT0FBTCxDQUFhQyxTQUFiLEVBQXdCWixPQUFPLENBQUNhLGlCQUFoQyxDQUF2QjtBQUNBLFdBQU9KLFNBQVA7QUFDSDs7QUF2QjBEOztBQTBCL0RLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmQsU0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgeyBfLCBlbnN1cmVMZWZ0U2xhc2gsIHRyaW1SaWdodFNsYXNoIH0gPSByZXF1aXJlKCdyay11dGlscycpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IHsgU2VydmljZUNvbnRhaW5lciB9ID0gcmVxdWlyZSgnQGdlbngvYXBwJyk7XG5jb25zdCBNb2R1bGVCYXNlID0gcmVxdWlyZSgnLi9Nb2R1bGVCYXNlJyk7XG5jb25zdCBSb3V0YWJsZSA9IHJlcXVpcmUoJy4vUm91dGFibGUnKTtcbmNvbnN0IExpdGVyYWwgPSByZXF1aXJlKCcuL2VudW0vTGl0ZXJhbCcpO1xuXG4vKipcbiAqIFdlYiBhcHBsaWNhdGlvbiBtb2R1bGUgY2xhc3MuXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIFJvdXRhYmxlKExpYk1vZHVsZSlcbiAqL1xuY2xhc3MgV2ViTW9kdWxlIGV4dGVuZHMgTW9kdWxlQmFzZShSb3V0YWJsZShTZXJ2aWNlQ29udGFpbmVyKSkge1xuICAgIC8qKiAgICAgXG4gICAgICogQHBhcmFtIHtXZWJTZXJ2ZXJ9IHNlcnZlclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGFwcCBtb2R1bGUuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHJvdXRlIC0gVGhlIGJhc2Ugcm91dGUgb2YgdGhlIGFwcCBtb2R1bGUuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGFwcFBhdGggLSBUaGUgcGF0aCB0byBsb2FkIHRoZSBhcHAncyBtb2R1bGUgZmlsZXNcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdIC0gVGhlIGFwcCBtb2R1bGUncyBleHRyYSBvcHRpb25zIGRlZmluZWQgaW4gaXRzIHBhcmVudCdzIGNvbmZpZ3VyYXRpb24uICAgICAgICAgIFxuICAgICAqIEBwcm9wZXJ0eSB7Ym9vbH0gW29wdGlvbnMubG9nV2l0aEFwcE5hbWU9ZmFsc2VdIC0gRmxhZyB0byBpbmNsdWRlIGFwcCBuYW1lIGluIGxvZyBtZXNzYWdlLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHNlcnZlciwgbmFtZSwgcm91dGUsIGFwcFBhdGgsIG9wdGlvbnMpIHsgICAgXG4gICAgICAgIHN1cGVyKHNlcnZlciwgbmFtZSwgYXBwUGF0aCwgb3B0aW9ucyk7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIE1vdW50aW5nIHJvdXRlLlxuICAgICAgICAgKiBAbWVtYmVyIHtzdHJpbmd9XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnJvdXRlID0gZW5zdXJlTGVmdFNsYXNoKHRyaW1SaWdodFNsYXNoKHJvdXRlKSk7ICAgICAgICAgICAgICAgXG4gICAgfSAgXG5cbiAgICBfZ2V0RmVhdHVyZUZhbGxiYWNrUGF0aCgpIHtcbiAgICAgICAgbGV0IHBhdGhBcnJheSA9IHN1cGVyLl9nZXRGZWF0dXJlRmFsbGJhY2tQYXRoKCk7XG4gICAgICAgIHBhdGhBcnJheS5zcGxpY2UoMiwgMCwgcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgTGl0ZXJhbC5BUFBfRkVBVFVSRVNfUEFUSCkpO1xuICAgICAgICByZXR1cm4gcGF0aEFycmF5O1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBXZWJNb2R1bGU7Il19