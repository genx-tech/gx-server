{"version":3,"sources":["../../src/middlewares/passportAuth.js"],"names":["InvalidConfiguration","require","createMiddleware","opt","app","strategy","passportService","getService","authenticate","options","module","exports"],"mappings":"AAAA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAA2BC,OAAO,CAAC,aAAD,CAAxC;;AAeA,IAAIC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,MAAI,CAACD,GAAD,IAAQ,CAACA,GAAG,CAACE,QAAjB,EAA2B;AACvB,UAAM,IAAIL,oBAAJ,CACF,wBADE,EAEFI,GAFE,EAGF,mCAHE,CAAN;AAKH;;AAED,MAAIE,eAAe,GAAGF,GAAG,CAACG,UAAJ,CAAe,UAAf,CAAtB;;AAEA,MAAI,CAACD,eAAL,EAAsB;AAClB,UAAM,IAAIN,oBAAJ,CACF,kCADE,EAEFI,GAFE,EAGF,UAHE,CAAN;AAKH;;AAED,SAAOE,eAAe,CAACE,YAAhB,CAA6BL,GAAG,CAACE,QAAjC,EAA2CF,GAAG,CAACM,OAA/C,CAAP;AACH,CApBD;;AAsBAC,MAAM,CAACC,OAAP,GAAiBT,gBAAjB","sourcesContent":["\"use strict\";\n\nconst { InvalidConfiguration } = require('@genx/error');\n\n/**\n * Passport initialization middleware, required to initialize Passport service.\n * @module Middleware_PassportAuth\n */\n\n/**\n * Create a passport authentication middleware.\n * @param {object} opt - Passport options\n * @property {string} opt.strategy - Passport strategy\n * @property {object} [opt.options] - Passport strategy options\n * @param {Routable} app\n * @returns {KoaActionFunction}\n */\nlet createMiddleware = (opt, app) => {\n    if (!opt || !opt.strategy) {\n        throw new InvalidConfiguration(\n            'Missing strategy name.', \n            app, \n            'middlewares.passportAuth.strategy'\n        );\n    }    \n    \n    let passportService = app.getService('passport');\n\n    if (!passportService) {\n        throw new InvalidConfiguration(\n            'Passport feature is not enabled.',\n            app,\n            'passport'\n        );\n    }\n\n    return passportService.authenticate(opt.strategy, opt.options);\n};\n\nmodule.exports = createMiddleware;"],"file":"passportAuth.js"}