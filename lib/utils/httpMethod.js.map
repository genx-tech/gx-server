{"version":3,"sources":["../../src/utils/httpMethod.js"],"names":["_","require","httpMethod","method","middlewares","arguments","length","Array","prototype","slice","call","target","name","descriptor","targetFunction","isHof","value","enumerable","Error","pos","indexOf","__metaRoute","substr","toLocaleLowerCase","__metaHttpMethod","isPlainObject","__metaMiddlewares","map","options","castArray","module","exports"],"mappings":";;;;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAQC,OAAO,CAAC,YAAD,CAArB;;AAEA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,WAA5B,EAAyC;AACrC,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxB,WAAOJ,UAAU,CAAC,KAAD,CAAV,CAAkB,GAAGK,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,SAA3B,CAArB,CAAP;AACH;;AAED,SAAO,UAAUM,MAAV,EAAkBC,IAAlB,EAAwBC,UAAxB,EAAoC;AACvC,QAAIC,cAAJ;AAAA,QAAoBC,KAAK,GAAG,KAA5B;;AAEA,QAAIV,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B,OAAOK,MAAP,KAAkB,UAAhD,EAA4D;AACxDG,MAAAA,cAAc,GAAGH,MAAjB;AACAI,MAAAA,KAAK,GAAG,IAAR;AACH,KAHD,MAGO,IAAIF,UAAU,IAAIA,UAAU,CAACG,KAA7B,EAAoC;AACvCF,MAAAA,cAAc,GAAGD,UAAU,CAACG,KAA5B;AACAH,MAAAA,UAAU,CAACI,UAAX,GAAwB,IAAxB;AACH,KAHM,MAGA;AACH,YAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,QAAIJ,cAAJ,EAAoB;AAChB,UAAI,OAAOX,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,YAAIgB,GAAG,GAAGhB,MAAM,CAACiB,OAAP,CAAe,IAAf,CAAV;;AAEA,YAAID,GAAG,KAAK,CAAC,CAAb,EAAgB;AACZ,cAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,kBAAM,IAAID,KAAJ,CAAU,yCAAyCf,MAAnD,CAAN;AACH;;AAKDW,UAAAA,cAAc,CAACO,WAAf,GAA6BlB,MAAM,CAACmB,MAAP,CAAcH,GAAG,GAAG,CAApB,CAA7B;AACAhB,UAAAA,MAAM,GAAGA,MAAM,CAACmB,MAAP,CAAc,CAAd,EAAiBH,GAAjB,EAAsBI,iBAAtB,EAAT;AACH;AACJ,OAdD,MAcO;AACHpB,QAAAA,MAAM,GAAG,KAAT;AACH;;AAEDW,MAAAA,cAAc,CAACU,gBAAf,GAAkCrB,MAAlC;;AAEA,UAAIC,WAAJ,EAAiB;AACb,YAAIJ,CAAC,CAACyB,aAAF,CAAgBrB,WAAhB,CAAJ,EAAkC;AAC9BU,UAAAA,cAAc,CAACY,iBAAf,GAAmC1B,CAAC,CAAC2B,GAAF,CAAMvB,WAAN,EAAmB,CAACwB,OAAD,EAAUhB,IAAV,MAAoB;AAAEA,YAAAA,IAAF;AAAQgB,YAAAA;AAAR,WAApB,CAAnB,CAAnC;AACH,SAFD,MAEO;AACHd,UAAAA,cAAc,CAACY,iBAAf,GAAmC1B,CAAC,CAAC6B,SAAF,CAAYzB,WAAZ,CAAnC;AACH;AACJ;AACJ;;AAED,WAAOW,KAAK,GAAGD,cAAH,GAAoBD,UAAhC;AACH,GA5CD;AA6CH;;AAEDiB,MAAM,CAACC,OAAP,GAAiB7B,UAAjB","sourcesContent":["const { _ } = require('@genx/july');\n\nfunction httpMethod(method, middlewares) {\n    if (arguments.length === 3) {\n        return httpMethod('get')(...Array.prototype.slice.call(arguments));\n    }\n\n    return function (target, name, descriptor) {\n        let targetFunction, isHof = false;\n    \n        if (arguments.length === 1 && typeof target === 'function') {\n            targetFunction = target;\n            isHof = true;\n        } else if (descriptor && descriptor.value) {\n            targetFunction = descriptor.value;\n            descriptor.enumerable = true;\n        } else {\n            throw new Error('Unsupported scenario.');\n        }\n    \n        if (targetFunction) {    \n            if (typeof method === 'string') {                \n                let pos = method.indexOf(':/');\n    \n                if (pos !== -1) {\n                    if (pos === 0) {\n                        throw new Error('Invalid httpMethod decorator param: ' + method);\n                    }\n    \n                    // like get:/, or post:/\n    \n                    //override actionName as route\n                    targetFunction.__metaRoute = method.substr(pos + 1);\n                    method = method.substr(0, pos).toLocaleLowerCase();\n                }\n            } else {\n                method = 'get';\n            }\n    \n            targetFunction.__metaHttpMethod = method;            \n    \n            if (middlewares) {\n                if (_.isPlainObject(middlewares)) {\n                    targetFunction.__metaMiddlewares = _.map(middlewares, (options, name) => ({ name, options }));\n                } else {\n                    targetFunction.__metaMiddlewares = _.castArray(middlewares);\n                }                \n            }\n        }\n    \n        return isHof ? targetFunction : descriptor;\n    }\n}\n\nmodule.exports = httpMethod;"],"file":"httpMethod.js"}