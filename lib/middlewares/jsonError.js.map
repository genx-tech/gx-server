{"version":3,"file":"jsonError.js","names":["require","http","module","exports","opt","app","handler","customHandler","getBackendAction","_app$settings","apiWrapper","getService","settings","apiWrapperService","wrapError","ctx","next","errorHandled","status","type","throw","body","err","emit","error","innerError","expose","message","STATUS_CODES"],"sources":["../../src/middlewares/jsonError.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Error response middleware with json\n * @module Middleware_JsonError\n */\n\nconst http = require('http');\n\nmodule.exports = (opt, app) => { \n    let handler;\n\n    if (opt && opt.customHandler) {\n        handler = app.getBackendAction(opt.customHandler);\n    }\n\n    if (!handler) {\n        const apiWrapper = app.getService(app.settings?.apiWrapperService || 'apiWrapper');\n        handler = apiWrapper && apiWrapper.wrapError;\n    }\n\n    return async (ctx, next) => {\n        try {\n            await next();\n\n            if (ctx.errorHandled) {\n                return;\n            }\n\n            if (ctx.status >= 400) {\n                if (ctx.type === 'text/plain') {\n                    ctx.throw(ctx.status, ctx.body);\n                } else {\n                    ctx.throw(ctx.status);\n                }  \n            }\n        } catch (err) {        \n            ctx.status = typeof err.status === 'number' && err.status >= 100 ? err.status : 500;               \n            ctx.type = 'application/json';\n\n            // accepted types\n            if (handler) {      \n                try {                    \n                    ctx.body = await handler(ctx, err);     \n                    ctx.app.emit('error', err, ctx);  \n                    ctx.errorHandled = true;      \n                    return;\n                } catch (error) {\n                    error.innerError = err;\n                    err = error;\n                }                   \n            }             \n\n            ctx.body = { error: (err.expose && err.message) ? err.message : http.STATUS_CODES[ctx.status] };\n            ctx.app.emit('error', err, ctx);\n        }        \n    } \n};       "],"mappings":"AAAA,YAAY;AAACA,OAAA;AAOb,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE5BE,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC3B,IAAIC,OAAO;EAEX,IAAIF,GAAG,IAAIA,GAAG,CAACG,aAAa,EAAE;IAC1BD,OAAO,GAAGD,GAAG,CAACG,gBAAgB,CAACJ,GAAG,CAACG,aAAa,CAAC;EACrD;EAEA,IAAI,CAACD,OAAO,EAAE;IAAA,IAAAG,aAAA;IACV,MAAMC,UAAU,GAAGL,GAAG,CAACM,UAAU,CAAC,EAAAF,aAAA,GAAAJ,GAAG,CAACO,QAAQ,cAAAH,aAAA,uBAAZA,aAAA,CAAcI,iBAAiB,KAAI,YAAY,CAAC;IAClFP,OAAO,GAAGI,UAAU,IAAIA,UAAU,CAACI,SAAS;EAChD;EAEA,OAAO,OAAOC,GAAG,EAAEC,IAAI,KAAK;IACxB,IAAI;MACA,MAAMA,IAAI,CAAC,CAAC;MAEZ,IAAID,GAAG,CAACE,YAAY,EAAE;QAClB;MACJ;MAEA,IAAIF,GAAG,CAACG,MAAM,IAAI,GAAG,EAAE;QACnB,IAAIH,GAAG,CAACI,IAAI,KAAK,YAAY,EAAE;UAC3BJ,GAAG,CAACK,KAAK,CAACL,GAAG,CAACG,MAAM,EAAEH,GAAG,CAACM,IAAI,CAAC;QACnC,CAAC,MAAM;UACHN,GAAG,CAACK,KAAK,CAACL,GAAG,CAACG,MAAM,CAAC;QACzB;MACJ;IACJ,CAAC,CAAC,OAAOI,GAAG,EAAE;MACVP,GAAG,CAACG,MAAM,GAAG,OAAOI,GAAG,CAACJ,MAAM,KAAK,QAAQ,IAAII,GAAG,CAACJ,MAAM,IAAI,GAAG,GAAGI,GAAG,CAACJ,MAAM,GAAG,GAAG;MACnFH,GAAG,CAACI,IAAI,GAAG,kBAAkB;MAG7B,IAAIb,OAAO,EAAE;QACT,IAAI;UACAS,GAAG,CAACM,IAAI,GAAG,MAAMf,OAAO,CAACS,GAAG,EAAEO,GAAG,CAAC;UAClCP,GAAG,CAACV,GAAG,CAACkB,IAAI,CAAC,OAAO,EAAED,GAAG,EAAEP,GAAG,CAAC;UAC/BA,GAAG,CAACE,YAAY,GAAG,IAAI;UACvB;QACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;UACZA,KAAK,CAACC,UAAU,GAAGH,GAAG;UACtBA,GAAG,GAAGE,KAAK;QACf;MACJ;MAEAT,GAAG,CAACM,IAAI,GAAG;QAAEG,KAAK,EAAGF,GAAG,CAACI,MAAM,IAAIJ,GAAG,CAACK,OAAO,GAAIL,GAAG,CAACK,OAAO,GAAG1B,IAAI,CAAC2B,YAAY,CAACb,GAAG,CAACG,MAAM;MAAE,CAAC;MAC/FH,GAAG,CAACV,GAAG,CAACkB,IAAI,CAAC,OAAO,EAAED,GAAG,EAAEP,GAAG,CAAC;IACnC;EACJ,CAAC;AACL,CAAC"}