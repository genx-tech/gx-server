"use strict";

require("source-map-support/register");

const path = require('path');

const Literal = require('../enum/Literal');

const {
  InvalidConfiguration
} = require('@genx/error');

const koaError = require('koa-error');

module.exports = (options, app) => {
  if (!options.template) {
    if (options.engine && options.engine !== 'swig') {
      throw new InvalidConfiguration('Missing template option.', app, 'middlewares.templatedError.template');
    }

    options.template = 'defaultError.swig';
  }

  options.template = path.resolve(app.backendPath, Literal.VIEWS_PATH, options.template);

  if (!options.engine) {
    options.engine = 'swig';
  }

  return koaError(options);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlcy90ZW1wbGF0ZWRFcnJvci5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsIkxpdGVyYWwiLCJJbnZhbGlkQ29uZmlndXJhdGlvbiIsImtvYUVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsIm9wdGlvbnMiLCJhcHAiLCJ0ZW1wbGF0ZSIsImVuZ2luZSIsInJlc29sdmUiLCJiYWNrZW5kUGF0aCIsIlZJRVdTX1BBVEgiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBT0EsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxpQkFBRCxDQUF2Qjs7QUFDQSxNQUFNO0FBQUVFLEVBQUFBO0FBQUYsSUFBMkJGLE9BQU8sQ0FBQyxhQUFELENBQXhDOztBQVdBLE1BQU1HLFFBQVEsR0FBR0gsT0FBTyxDQUFDLFdBQUQsQ0FBeEI7O0FBRUFJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxPQUFELEVBQVVDLEdBQVYsS0FBa0I7QUFDL0IsTUFBSSxDQUFDRCxPQUFPLENBQUNFLFFBQWIsRUFBdUI7QUFDbkIsUUFBSUYsT0FBTyxDQUFDRyxNQUFSLElBQWtCSCxPQUFPLENBQUNHLE1BQVIsS0FBbUIsTUFBekMsRUFBaUQ7QUFDN0MsWUFBTSxJQUFJUCxvQkFBSixDQUNGLDBCQURFLEVBRUZLLEdBRkUsRUFHRixxQ0FIRSxDQUFOO0FBS0g7O0FBRURELElBQUFBLE9BQU8sQ0FBQ0UsUUFBUixHQUFtQixtQkFBbkI7QUFDSDs7QUFFREYsRUFBQUEsT0FBTyxDQUFDRSxRQUFSLEdBQW1CVCxJQUFJLENBQUNXLE9BQUwsQ0FBYUgsR0FBRyxDQUFDSSxXQUFqQixFQUE4QlYsT0FBTyxDQUFDVyxVQUF0QyxFQUFrRE4sT0FBTyxDQUFDRSxRQUExRCxDQUFuQjs7QUFFQSxNQUFJLENBQUNGLE9BQU8sQ0FBQ0csTUFBYixFQUFxQjtBQUNqQkgsSUFBQUEsT0FBTyxDQUFDRyxNQUFSLEdBQWlCLE1BQWpCO0FBQ0g7O0FBRUQsU0FBT04sUUFBUSxDQUFDRyxPQUFELENBQWY7QUFDSCxDQXBCRCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIEVycm9yIHJlc3BvbnNlIG1pZGRsZXdhcmUgd2l0aCB0ZW1wbGF0ZSBlbmdpbmVzXG4gKiBAbW9kdWxlIE1pZGRsZXdhcmVfVGVtcGxhdGVkRXJyb3JcbiAqL1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgTGl0ZXJhbCA9IHJlcXVpcmUoJy4uL2VudW0vTGl0ZXJhbCcpO1xuY29uc3QgeyBJbnZhbGlkQ29uZmlndXJhdGlvbiB9ID0gcmVxdWlyZSgnQGdlbngvZXJyb3InKTtcblxuLyoqXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gVGVtcGxhdGUgb3B0aW9uc1xuICogQHByb3BlcnR5IHtzdHJpbmd9IG9wdGlvbnMudGVtcGxhdGUgLSBQYXRoIHRvIHRlbXBsYXRlIHdyaXR0ZW4gd2l0aCB5b3VyIHRlbXBsYXRlIGVuZ2luZVxuICogQHByb3BlcnR5IHtzdHJpbmd9IG9wdGlvbnMuZW5naW5lIC0gUGF0aCB0byB0ZW1wbGF0ZSB3cml0dGVuIHdpdGggeW91ciB0ZW1wbGF0ZSBlbmdpbmVcbiAqIEBwcm9wZXJ0eSB7Ym9vbH0gb3B0aW9ucy5jYWNoZSAtIFBhdGggdG8gdGVtcGxhdGUgd3JpdHRlbiB3aXRoIHlvdXIgdGVtcGxhdGUgZW5naW5lLCBkZWZhdWx0OiBOT0RFX0VOViAhPSAnZGV2ZWxvcG1lbnQnXG4gKiBAcHJvcGVydHkge3N0cmluZ30gW29wdGlvbnMuZW52PSdkZXZlbG9wbWVudCddIC0gUGF0aCB0byB0ZW1wbGF0ZSB3cml0dGVuIHdpdGggeW91ciB0ZW1wbGF0ZSBlbmdpbmVcbiAqIEBwcm9wZXJ0eSB7QXJyYXkuPHN0cmluZz59IG9wdGlvbnMuYWNjZXB0cyAtIE1pbWV0eXBlcyBwYXNzZWQgdG8gY3R4LmFjY2VwdHMsIGRlZmF1bHQ6IFsgJ2h0bWwnLCAndGV4dCcsICdqc29uJyBdXG4gKiovXG5jb25zdCBrb2FFcnJvciA9IHJlcXVpcmUoJ2tvYS1lcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChvcHRpb25zLCBhcHApID0+IHtcbiAgICBpZiAoIW9wdGlvbnMudGVtcGxhdGUpIHsgICAgICAgIFxuICAgICAgICBpZiAob3B0aW9ucy5lbmdpbmUgJiYgb3B0aW9ucy5lbmdpbmUgIT09ICdzd2lnJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDb25maWd1cmF0aW9uKFxuICAgICAgICAgICAgICAgICdNaXNzaW5nIHRlbXBsYXRlIG9wdGlvbi4nLFxuICAgICAgICAgICAgICAgIGFwcCxcbiAgICAgICAgICAgICAgICAnbWlkZGxld2FyZXMudGVtcGxhdGVkRXJyb3IudGVtcGxhdGUnXG4gICAgICAgICAgICApOyAgICAgICAgXG4gICAgICAgIH1cblxuICAgICAgICBvcHRpb25zLnRlbXBsYXRlID0gJ2RlZmF1bHRFcnJvci5zd2lnJztcbiAgICB9XG5cbiAgICBvcHRpb25zLnRlbXBsYXRlID0gcGF0aC5yZXNvbHZlKGFwcC5iYWNrZW5kUGF0aCwgTGl0ZXJhbC5WSUVXU19QQVRILCBvcHRpb25zLnRlbXBsYXRlKTsgXG5cbiAgICBpZiAoIW9wdGlvbnMuZW5naW5lKSB7XG4gICAgICAgIG9wdGlvbnMuZW5naW5lID0gJ3N3aWcnO1xuICAgIH1cblxuICAgIHJldHVybiBrb2FFcnJvcihvcHRpb25zKTtcbn0gIl19