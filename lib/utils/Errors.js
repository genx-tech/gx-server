"use strict";

require("source-map-support/register");

const {
  Errors: {
    GeneralError,
    ApplicationError,
    InvalidArgument,
    InvalidConfiguration,
    ExposableError
  }
} = require('@genx/app');

const HttpCode = require('http-status-codes');

class BadRequest extends ExposableError {
  constructor(message, info) {
    super(message, info, HttpCode.BAD_REQUEST, 'E_BAD_REQ');
  }

}

class NotFound extends ExposableError {
  constructor(message, info) {
    super(message, info, HttpCode.NOT_FOUND, 'E_NOT_FOUND');
  }

}

class Unauthorized extends ExposableError {
  constructor(message, info) {
    super(message, info, HttpCode.UNAUTHORIZED, 'E_UNAUTHORIZED');
  }

}

class ServiceUnavailable extends GeneralError {
  constructor(message, info) {
    super(message, info, HttpCode.SERVICE_UNAVAILABLE, 'E_UNAVAILABLE');
  }

}

class ServerError extends ApplicationError {}

class ExternalServiceError extends ApplicationError {}

exports.InvalidArgument = InvalidArgument;
exports.InvalidConfiguration = InvalidConfiguration;
exports.BadRequest = BadRequest;
exports.NotFound = NotFound;
exports.Unauthorized = Unauthorized;
exports.ServerError = ServerError;
exports.ExternalServiceError = ExternalServiceError;
exports.ServiceUnavailable = ServiceUnavailable;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9FcnJvcnMuanMiXSwibmFtZXMiOlsiRXJyb3JzIiwiR2VuZXJhbEVycm9yIiwiQXBwbGljYXRpb25FcnJvciIsIkludmFsaWRBcmd1bWVudCIsIkludmFsaWRDb25maWd1cmF0aW9uIiwiRXhwb3NhYmxlRXJyb3IiLCJyZXF1aXJlIiwiSHR0cENvZGUiLCJCYWRSZXF1ZXN0IiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwiaW5mbyIsIkJBRF9SRVFVRVNUIiwiTm90Rm91bmQiLCJOT1RfRk9VTkQiLCJVbmF1dGhvcml6ZWQiLCJVTkFVVEhPUklaRUQiLCJTZXJ2aWNlVW5hdmFpbGFibGUiLCJTRVJWSUNFX1VOQVZBSUxBQkxFIiwiU2VydmVyRXJyb3IiLCJFeHRlcm5hbFNlcnZpY2VFcnJvciIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBT0EsTUFBTTtBQUNGQSxFQUFBQSxNQUFNLEVBQUU7QUFBRUMsSUFBQUEsWUFBRjtBQUFnQkMsSUFBQUEsZ0JBQWhCO0FBQWtDQyxJQUFBQSxlQUFsQztBQUFtREMsSUFBQUEsb0JBQW5EO0FBQXlFQyxJQUFBQTtBQUF6RTtBQUROLElBRUZDLE9BQU8sQ0FBQyxXQUFELENBRlg7O0FBSUEsTUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsbUJBQUQsQ0FBeEI7O0FBT0EsTUFBTUUsVUFBTixTQUF5QkgsY0FBekIsQ0FBd0M7QUFDcENJLEVBQUFBLFdBQVcsQ0FBQ0MsT0FBRCxFQUFVQyxJQUFWLEVBQWdCO0FBQ3ZCLFVBQU1ELE9BQU4sRUFBZUMsSUFBZixFQUFxQkosUUFBUSxDQUFDSyxXQUE5QixFQUEyQyxXQUEzQztBQUNIOztBQUhtQzs7QUFXeEMsTUFBTUMsUUFBTixTQUF1QlIsY0FBdkIsQ0FBc0M7QUFDbENJLEVBQUFBLFdBQVcsQ0FBQ0MsT0FBRCxFQUFVQyxJQUFWLEVBQWdCO0FBQ3ZCLFVBQU1ELE9BQU4sRUFBZUMsSUFBZixFQUFxQkosUUFBUSxDQUFDTyxTQUE5QixFQUF5QyxhQUF6QztBQUNIOztBQUhpQzs7QUFXdEMsTUFBTUMsWUFBTixTQUEyQlYsY0FBM0IsQ0FBMEM7QUFDdENJLEVBQUFBLFdBQVcsQ0FBQ0MsT0FBRCxFQUFVQyxJQUFWLEVBQWdCO0FBQ3ZCLFVBQU1ELE9BQU4sRUFBZUMsSUFBZixFQUFxQkosUUFBUSxDQUFDUyxZQUE5QixFQUE0QyxnQkFBNUM7QUFDSDs7QUFIcUM7O0FBVzFDLE1BQU1DLGtCQUFOLFNBQWlDaEIsWUFBakMsQ0FBOEM7QUFDMUNRLEVBQUFBLFdBQVcsQ0FBQ0MsT0FBRCxFQUFVQyxJQUFWLEVBQWdCO0FBQ3ZCLFVBQU1ELE9BQU4sRUFBZUMsSUFBZixFQUFxQkosUUFBUSxDQUFDVyxtQkFBOUIsRUFBbUQsZUFBbkQ7QUFDSDs7QUFIeUM7O0FBUzlDLE1BQU1DLFdBQU4sU0FBMEJqQixnQkFBMUIsQ0FBMkM7O0FBTTNDLE1BQU1rQixvQkFBTixTQUFtQ2xCLGdCQUFuQyxDQUFvRDs7QUFHcERtQixPQUFPLENBQUNsQixlQUFSLEdBQTBCQSxlQUExQjtBQUNBa0IsT0FBTyxDQUFDakIsb0JBQVIsR0FBK0JBLG9CQUEvQjtBQUNBaUIsT0FBTyxDQUFDYixVQUFSLEdBQXFCQSxVQUFyQjtBQUNBYSxPQUFPLENBQUNSLFFBQVIsR0FBbUJBLFFBQW5CO0FBQ0FRLE9BQU8sQ0FBQ04sWUFBUixHQUF1QkEsWUFBdkI7QUFDQU0sT0FBTyxDQUFDRixXQUFSLEdBQXNCQSxXQUF0QjtBQUNBRSxPQUFPLENBQUNELG9CQUFSLEdBQStCQSxvQkFBL0I7QUFDQUMsT0FBTyxDQUFDSixrQkFBUixHQUE2QkEsa0JBQTdCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogRXJyb3IgZGVmaW5pdGlvbnMuXG4gKiBAbW9kdWxlIEVycm9yc1xuICovXG5cbmNvbnN0IHsgXG4gICAgRXJyb3JzOiB7IEdlbmVyYWxFcnJvciwgQXBwbGljYXRpb25FcnJvciwgSW52YWxpZEFyZ3VtZW50LCBJbnZhbGlkQ29uZmlndXJhdGlvbiwgRXhwb3NhYmxlRXJyb3IgfVxufSA9IHJlcXVpcmUoJ0BnZW54L2FwcCcpO1xuXG5jb25zdCBIdHRwQ29kZSA9IHJlcXVpcmUoJ2h0dHAtc3RhdHVzLWNvZGVzJyk7XG5cbi8qKlxuICogUmVxdWVzdCBlcnJvcnMuXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEV4cG9zYWJsZUVycm9yICBcbiAqL1xuY2xhc3MgQmFkUmVxdWVzdCBleHRlbmRzIEV4cG9zYWJsZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBpbmZvKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIGluZm8sIEh0dHBDb2RlLkJBRF9SRVFVRVNULCAnRV9CQURfUkVRJyk7XG4gICAgfVxufSAgXG4gICBcbi8qKlxuICogSHR0cCBOb3RGb3VuZCwgNDA0LlxuICogQGNsYXNzIFxuICogQGV4dGVuZHMgRXhwb3NhYmxlRXJyb3JcbiAqL1xuY2xhc3MgTm90Rm91bmQgZXh0ZW5kcyBFeHBvc2FibGVFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgaW5mbykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBpbmZvLCBIdHRwQ29kZS5OT1RfRk9VTkQsICdFX05PVF9GT1VORCcpO1xuICAgIH1cbn0gIFxuXG4vKipcbiAqIEh0dHAgVW5hdXRob3JpemVkLCA0MDEuXG4gKiBAY2xhc3MgXG4gKiBAZXh0ZW5kcyBFeHBvc2FibGVFcnJvclxuICovXG5jbGFzcyBVbmF1dGhvcml6ZWQgZXh0ZW5kcyBFeHBvc2FibGVFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgaW5mbykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBpbmZvLCBIdHRwQ29kZS5VTkFVVEhPUklaRUQsICdFX1VOQVVUSE9SSVpFRCcpO1xuICAgIH0gXG59IFxuXG4vKipcbiAqIFNlcnZpY2UgdW5hdmFpbGFibGUgZXJyb3IsIDUwM1xuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBHZW5lcmFsRXJyb3IgIFxuICovXG5jbGFzcyBTZXJ2aWNlVW5hdmFpbGFibGUgZXh0ZW5kcyBHZW5lcmFsRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGluZm8pIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgaW5mbywgSHR0cENvZGUuU0VSVklDRV9VTkFWQUlMQUJMRSwgJ0VfVU5BVkFJTEFCTEUnKTtcbiAgICB9XG59XG5cbi8qKlxuICogSW50ZXJuYWwgc2VydmVyIGVycm9yLCA1MDBcbiAqL1xuY2xhc3MgU2VydmVyRXJyb3IgZXh0ZW5kcyBBcHBsaWNhdGlvbkVycm9yIHtcbn1cblxuLyoqXG4gKiBJbnRlcm5hbCBzZXJ2ZXIgZXJyb3IsIDUwMFxuICovXG5jbGFzcyBFeHRlcm5hbFNlcnZpY2VFcnJvciBleHRlbmRzIEFwcGxpY2F0aW9uRXJyb3Ige1xufVxuXG5leHBvcnRzLkludmFsaWRBcmd1bWVudCA9IEludmFsaWRBcmd1bWVudDtcbmV4cG9ydHMuSW52YWxpZENvbmZpZ3VyYXRpb24gPSBJbnZhbGlkQ29uZmlndXJhdGlvbjtcbmV4cG9ydHMuQmFkUmVxdWVzdCA9IEJhZFJlcXVlc3Q7XG5leHBvcnRzLk5vdEZvdW5kID0gTm90Rm91bmQ7XG5leHBvcnRzLlVuYXV0aG9yaXplZCA9IFVuYXV0aG9yaXplZDtcbmV4cG9ydHMuU2VydmVyRXJyb3IgPSBTZXJ2ZXJFcnJvcjtcbmV4cG9ydHMuRXh0ZXJuYWxTZXJ2aWNlRXJyb3IgPSBFeHRlcm5hbFNlcnZpY2VFcnJvcjtcbmV4cG9ydHMuU2VydmljZVVuYXZhaWxhYmxlID0gU2VydmljZVVuYXZhaWxhYmxlOyJdfQ==