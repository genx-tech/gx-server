"use strict";

require("source-map-support/register");

const http = require('http');

const {
  _
} = require('rk-utils');

module.exports = (opt, app) => {
  let handler;

  if (opt && opt.customHandler) {
    handler = app.getBackendAction(opt.customHandler);
  }

  return async (ctx, next) => {
    try {
      await next();
      if (ctx.response.status === 404 && !ctx.response.body) ctx.throw(404);
    } catch (err) {
      ctx.status = typeof err.status === 'number' ? err.status : 500;
      ctx.type = 'application/json';

      if (handler) {
        try {
          ctx.body = await handler(ctx, err);
          return;
        } catch (error) {
          error.innerError = err;
          err = error;
        }
      }

      ctx.body = {
        error: err.expose ? err.message : http.STATUS_CODES[ctx.status]
      };
      ctx.app.emit('error', err, ctx);
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlcy9qc29uRXJyb3IuanMiXSwibmFtZXMiOlsiaHR0cCIsInJlcXVpcmUiLCJfIiwibW9kdWxlIiwiZXhwb3J0cyIsIm9wdCIsImFwcCIsImhhbmRsZXIiLCJjdXN0b21IYW5kbGVyIiwiZ2V0QmFja2VuZEFjdGlvbiIsImN0eCIsIm5leHQiLCJyZXNwb25zZSIsInN0YXR1cyIsImJvZHkiLCJ0aHJvdyIsImVyciIsInR5cGUiLCJlcnJvciIsImlubmVyRXJyb3IiLCJleHBvc2UiLCJtZXNzYWdlIiwiU1RBVFVTX0NPREVTIiwiZW1pdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFPQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUFRRCxPQUFPLENBQUMsVUFBRCxDQUFyQjs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQzNCLE1BQUlDLE9BQUo7O0FBRUEsTUFBSUYsR0FBRyxJQUFJQSxHQUFHLENBQUNHLGFBQWYsRUFBOEI7QUFDMUJELElBQUFBLE9BQU8sR0FBR0QsR0FBRyxDQUFDRyxnQkFBSixDQUFxQkosR0FBRyxDQUFDRyxhQUF6QixDQUFWO0FBQ0g7O0FBRUQsU0FBTyxPQUFPRSxHQUFQLEVBQVlDLElBQVosS0FBcUI7QUFDeEIsUUFBSTtBQUNBLFlBQU1BLElBQUksRUFBVjtBQUNBLFVBQUlELEdBQUcsQ0FBQ0UsUUFBSixDQUFhQyxNQUFiLEtBQXdCLEdBQXhCLElBQStCLENBQUNILEdBQUcsQ0FBQ0UsUUFBSixDQUFhRSxJQUFqRCxFQUF1REosR0FBRyxDQUFDSyxLQUFKLENBQVUsR0FBVjtBQUMxRCxLQUhELENBR0UsT0FBT0MsR0FBUCxFQUFZO0FBQ1ZOLE1BQUFBLEdBQUcsQ0FBQ0csTUFBSixHQUFhLE9BQU9HLEdBQUcsQ0FBQ0gsTUFBWCxLQUFzQixRQUF0QixHQUFpQ0csR0FBRyxDQUFDSCxNQUFyQyxHQUE4QyxHQUEzRDtBQUNBSCxNQUFBQSxHQUFHLENBQUNPLElBQUosR0FBVyxrQkFBWDs7QUFHQSxVQUFJVixPQUFKLEVBQWE7QUFDVCxZQUFJO0FBQ0FHLFVBQUFBLEdBQUcsQ0FBQ0ksSUFBSixHQUFXLE1BQU1QLE9BQU8sQ0FBQ0csR0FBRCxFQUFNTSxHQUFOLENBQXhCO0FBQ0E7QUFDSCxTQUhELENBR0UsT0FBT0UsS0FBUCxFQUFjO0FBQ1pBLFVBQUFBLEtBQUssQ0FBQ0MsVUFBTixHQUFtQkgsR0FBbkI7QUFDQUEsVUFBQUEsR0FBRyxHQUFHRSxLQUFOO0FBQ0g7QUFDSjs7QUFFRFIsTUFBQUEsR0FBRyxDQUFDSSxJQUFKLEdBQVc7QUFBRUksUUFBQUEsS0FBSyxFQUFFRixHQUFHLENBQUNJLE1BQUosR0FBYUosR0FBRyxDQUFDSyxPQUFqQixHQUEyQnJCLElBQUksQ0FBQ3NCLFlBQUwsQ0FBa0JaLEdBQUcsQ0FBQ0csTUFBdEI7QUFBcEMsT0FBWDtBQUNBSCxNQUFBQSxHQUFHLENBQUNKLEdBQUosQ0FBUWlCLElBQVIsQ0FBYSxPQUFiLEVBQXNCUCxHQUF0QixFQUEyQk4sR0FBM0I7QUFDSDtBQUNKLEdBdEJEO0FBdUJILENBOUJEIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogRXJyb3IgcmVzcG9uc2UgbWlkZGxld2FyZSB3aXRoIGpzb25cbiAqIEBtb2R1bGUgTWlkZGxld2FyZV9Kc29uRXJyb3JcbiAqL1xuXG5jb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xuY29uc3QgeyBfIH0gPSByZXF1aXJlKCdyay11dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChvcHQsIGFwcCkgPT4geyBcbiAgICBsZXQgaGFuZGxlcjtcblxuICAgIGlmIChvcHQgJiYgb3B0LmN1c3RvbUhhbmRsZXIpIHtcbiAgICAgICAgaGFuZGxlciA9IGFwcC5nZXRCYWNrZW5kQWN0aW9uKG9wdC5jdXN0b21IYW5kbGVyKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXN5bmMgKGN0eCwgbmV4dCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgbmV4dCgpO1xuICAgICAgICAgICAgaWYgKGN0eC5yZXNwb25zZS5zdGF0dXMgPT09IDQwNCAmJiAhY3R4LnJlc3BvbnNlLmJvZHkpIGN0eC50aHJvdyg0MDQpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHsgICAgICAgIFxuICAgICAgICAgICAgY3R4LnN0YXR1cyA9IHR5cGVvZiBlcnIuc3RhdHVzID09PSAnbnVtYmVyJyA/IGVyci5zdGF0dXMgOiA1MDA7ICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBjdHgudHlwZSA9ICdhcHBsaWNhdGlvbi9qc29uJztcblxuICAgICAgICAgICAgLy8gYWNjZXB0ZWQgdHlwZXNcbiAgICAgICAgICAgIGlmIChoYW5kbGVyKSB7ICAgICAgXG4gICAgICAgICAgICAgICAgdHJ5IHsgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBjdHguYm9keSA9IGF3YWl0IGhhbmRsZXIoY3R4LCBlcnIpOyAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGVycm9yLmlubmVyRXJyb3IgPSBlcnI7XG4gICAgICAgICAgICAgICAgICAgIGVyciA9IGVycm9yO1xuICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9ICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICBjdHguYm9keSA9IHsgZXJyb3I6IGVyci5leHBvc2UgPyBlcnIubWVzc2FnZSA6IGh0dHAuU1RBVFVTX0NPREVTW2N0eC5zdGF0dXNdIH07XG4gICAgICAgICAgICBjdHguYXBwLmVtaXQoJ2Vycm9yJywgZXJyLCBjdHgpO1xuICAgICAgICB9ICAgICAgICBcbiAgICB9IFxufTsgICAgICAgIl19